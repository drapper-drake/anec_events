{"version":3,"file":"syntaxhighlighter-8090749e.26c26842.js","sources":["../../node_modules/@storybook/components/dist/esm/syntaxhighlighter-8090749e.js"],"sourcesContent":["import \"regenerator-runtime/runtime.js\";\n\nfunction _defineProperty2(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray2(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray2(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray2(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray2(o, minLen); }\n\nfunction _arrayLikeToArray2(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.from-code-point.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.regexp.flags.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/esnext.global-this.js\";\nimport \"core-js/modules/es.object.entries.js\";\nimport { _ as _objectWithoutPropertiesLoose, a as _extends, c as commonjsGlobal, m as memoize, d as dedent, b as __awaiter, S as ScrollArea, e as __rest, A as ActionBar, w as window_1 } from './index-9e51ef47.js';\nimport React__default, { useState } from 'react';\nimport { logger } from '@storybook/client-logger';\nimport { styled } from '@storybook/theming';\nimport '@storybook/csf';\nvar jsx_1 = jsx;\njsx.displayName = 'jsx';\njsx.aliases = [];\n\nfunction jsx(Prism) {\n  (function (Prism) {\n    var javascript = Prism.util.clone(Prism.languages.javascript);\n    var space = /(?:\\s|\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))\\*\\/)/.source;\n    var braces = /(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})/.source;\n    var spread = /(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})/.source;\n    /**\n     * @param {string} source\n     * @param {string} [flags]\n     */\n\n    function re(source, flags) {\n      source = source.replace(/<S>/g, function () {\n        return space;\n      }).replace(/<BRACES>/g, function () {\n        return braces;\n      }).replace(/<SPREAD>/g, function () {\n        return spread;\n      });\n      return RegExp(source, flags);\n    }\n\n    spread = re(spread).source;\n    Prism.languages.jsx = Prism.languages.extend('markup', javascript);\n    Prism.languages.jsx.tag.pattern = re(/<\\/?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\/?)?>/.source);\n    Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/i;\n    Prism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/i;\n    Prism.languages.jsx.tag.inside['tag'].inside['class-name'] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/;\n    Prism.languages.jsx.tag.inside['comment'] = javascript['comment'];\n    Prism.languages.insertBefore('inside', 'attr-name', {\n      spread: {\n        pattern: re(/<SPREAD>/.source),\n        inside: Prism.languages.jsx\n      }\n    }, Prism.languages.jsx.tag);\n    Prism.languages.insertBefore('inside', 'special-attr', {\n      script: {\n        // Allow for two levels of nesting\n        pattern: re(/=<BRACES>/.source),\n        inside: {\n          'script-punctuation': {\n            pattern: /^=(?=\\{)/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.jsx\n        },\n        alias: 'language-javascript'\n      }\n    }, Prism.languages.jsx.tag); // The following will handle plain text inside tags\n\n    var stringifyToken = function stringifyToken(token) {\n      if (!token) {\n        return '';\n      }\n\n      if (typeof token === 'string') {\n        return token;\n      }\n\n      if (typeof token.content === 'string') {\n        return token.content;\n      }\n\n      return token.content.map(stringifyToken).join('');\n    };\n\n    var walkTokens = function walkTokens(tokens) {\n      var openedTags = [];\n\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i];\n        var notTagNorBrace = false;\n\n        if (typeof token !== 'string') {\n          if (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n            // We found a tag, now find its kind\n            if (token.content[0].content[0].content === '</') {\n              // Closing tag\n              if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n                // Pop matching opening tag\n                openedTags.pop();\n              }\n            } else {\n              if (token.content[token.content.length - 1].content === '/>') ;else {\n                // Opening tag\n                openedTags.push({\n                  tagName: stringifyToken(token.content[0].content[1]),\n                  openedBraces: 0\n                });\n              }\n            }\n          } else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n            // Here we might have entered a JSX context inside a tag\n            openedTags[openedTags.length - 1].openedBraces++;\n          } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n            // Here we might have left a JSX context inside a tag\n            openedTags[openedTags.length - 1].openedBraces--;\n          } else {\n            notTagNorBrace = true;\n          }\n        }\n\n        if (notTagNorBrace || typeof token === 'string') {\n          if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n            // Here we are inside a tag, and not inside a JSX context.\n            // That's plain text: drop any tokens matched.\n            var plainText = stringifyToken(token); // And merge text with adjacent text\n\n            if (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n              plainText += stringifyToken(tokens[i + 1]);\n              tokens.splice(i + 1, 1);\n            }\n\n            if (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n              plainText = stringifyToken(tokens[i - 1]) + plainText;\n              tokens.splice(i - 1, 1);\n              i--;\n            }\n\n            tokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n          }\n        }\n\n        if (token.content && typeof token.content !== 'string') {\n          walkTokens(token.content);\n        }\n      }\n    };\n\n    Prism.hooks.add('after-tokenize', function (env) {\n      if (env.language !== 'jsx' && env.language !== 'tsx') {\n        return;\n      }\n\n      walkTokens(env.tokens);\n    });\n  })(Prism);\n}\n\nvar jsx$1 = jsx_1;\nvar bash_1 = bash;\nbash.displayName = 'bash';\nbash.aliases = ['shell'];\n\nfunction bash(Prism) {\n  (function (Prism) {\n    // $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n    // + LC_ALL, RANDOM, REPLY, SECONDS.\n    // + make sure PS1..4 are here as they are not always set,\n    // - some useless things.\n    var envVars = '\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b';\n    var commandAfterHeredoc = {\n      pattern: /(^([\"']?)\\w+\\2)[ \\t]+\\S.*/,\n      lookbehind: true,\n      alias: 'punctuation',\n      // this looks reasonably well in all themes\n      inside: null // see below\n\n    };\n    var insideString = {\n      bash: commandAfterHeredoc,\n      environment: {\n        pattern: RegExp('\\\\$' + envVars),\n        alias: 'constant'\n      },\n      variable: [// [0]: Arithmetic Environment\n      {\n        pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n        greedy: true,\n        inside: {\n          // If there is a $ sign at the beginning highlight $(( and )) as variable\n          variable: [{\n            pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n            lookbehind: true\n          }, /^\\$\\(\\(/],\n          number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n          // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n          operator: /--|\\+\\+|\\*\\*=?|<<=?|>>=?|&&|\\|\\||[=!+\\-*/%<>^&|]=?|[?~:]/,\n          // If there is no $ sign at the beginning highlight (( and )) as punctuation\n          punctuation: /\\(\\(?|\\)\\)?|,|;/\n        }\n      }, // [1]: Command Substitution\n      {\n        pattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n        greedy: true,\n        inside: {\n          variable: /^\\$\\(|^`|\\)$|`$/\n        }\n      }, // [2]: Brace expansion\n      {\n        pattern: /\\$\\{[^}]+\\}/,\n        greedy: true,\n        inside: {\n          operator: /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n          punctuation: /[\\[\\]]/,\n          environment: {\n            pattern: RegExp('(\\\\{)' + envVars),\n            lookbehind: true,\n            alias: 'constant'\n          }\n        }\n      }, /\\$(?:\\w+|[#?*!@$])/],\n      // Escape sequences from echo and printf's manuals, and escaped quotes.\n      entity: /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|x[0-9a-fA-F]{1,2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})/\n    };\n    Prism.languages.bash = {\n      shebang: {\n        pattern: /^#!\\s*\\/.*/,\n        alias: 'important'\n      },\n      comment: {\n        pattern: /(^|[^\"{\\\\$])#.*/,\n        lookbehind: true\n      },\n      'function-name': [// a) function foo {\n      // b) foo() {\n      // c) function foo() {\n      // but not “foo {”\n      {\n        // a) and c)\n        pattern: /(\\bfunction\\s+)[\\w-]+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n        lookbehind: true,\n        alias: 'function'\n      }, {\n        // b)\n        pattern: /\\b[\\w-]+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n        alias: 'function'\n      }],\n      // Highlight variable names as variables in for and select beginnings.\n      'for-or-select': {\n        pattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n        alias: 'variable',\n        lookbehind: true\n      },\n      // Highlight variable names as variables in the left-hand part\n      // of assignments (“=” and “+=”).\n      'assign-left': {\n        pattern: /(^|[\\s;|&]|[<>]\\()\\w+(?=\\+?=)/,\n        inside: {\n          environment: {\n            pattern: RegExp('(^|[\\\\s;|&]|[<>]\\\\()' + envVars),\n            lookbehind: true,\n            alias: 'constant'\n          }\n        },\n        alias: 'variable',\n        lookbehind: true\n      },\n      string: [// Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n      {\n        pattern: /((?:^|[^<])<<-?\\s*)(\\w+)\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\2/,\n        lookbehind: true,\n        greedy: true,\n        inside: insideString\n      }, // Here-document with quotes around the tag\n      // → No expansion (so no “inside”).\n      {\n        pattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\3/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          bash: commandAfterHeredoc\n        }\n      }, // “Normal” string\n      {\n        // https://www.gnu.org/software/bash/manual/html_node/Double-Quotes.html\n        pattern: /(^|[^\\\\](?:\\\\\\\\)*)\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/,\n        lookbehind: true,\n        greedy: true,\n        inside: insideString\n      }, {\n        // https://www.gnu.org/software/bash/manual/html_node/Single-Quotes.html\n        pattern: /(^|[^$\\\\])'[^']*'/,\n        lookbehind: true,\n        greedy: true\n      }, {\n        // https://www.gnu.org/software/bash/manual/html_node/ANSI_002dC-Quoting.html\n        pattern: /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n        greedy: true,\n        inside: {\n          entity: insideString.entity\n        }\n      }],\n      environment: {\n        pattern: RegExp('\\\\$?' + envVars),\n        alias: 'constant'\n      },\n      variable: insideString.variable,\n      function: {\n        pattern: /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|aptitude|apt-cache|apt-get|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n        lookbehind: true\n      },\n      keyword: {\n        pattern: /(^|[\\s;|&]|[<>]\\()(?:if|then|else|elif|fi|for|while|in|case|esac|function|select|do|done|until)(?=$|[)\\s;|&])/,\n        lookbehind: true\n      },\n      // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n      builtin: {\n        pattern: /(^|[\\s;|&]|[<>]\\()(?:\\.|:|break|cd|continue|eval|exec|exit|export|getopts|hash|pwd|readonly|return|shift|test|times|trap|umask|unset|alias|bind|builtin|caller|command|declare|echo|enable|help|let|local|logout|mapfile|printf|read|readarray|source|type|typeset|ulimit|unalias|set|shopt)(?=$|[)\\s;|&])/,\n        lookbehind: true,\n        // Alias added to make those easier to distinguish from strings.\n        alias: 'class-name'\n      },\n      boolean: {\n        pattern: /(^|[\\s;|&]|[<>]\\()(?:true|false)(?=$|[)\\s;|&])/,\n        lookbehind: true\n      },\n      'file-descriptor': {\n        pattern: /\\B&\\d\\b/,\n        alias: 'important'\n      },\n      operator: {\n        // Lots of redirections here, but not just that.\n        pattern: /\\d?<>|>\\||\\+=|=[=~]?|!=?|<<[<-]?|[&\\d]?>>|\\d[<>]&?|[<>][&=]?|&[>&]?|\\|[&|]?/,\n        inside: {\n          'file-descriptor': {\n            pattern: /^\\d/,\n            alias: 'important'\n          }\n        }\n      },\n      punctuation: /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n      number: {\n        pattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n        lookbehind: true\n      }\n    };\n    commandAfterHeredoc.inside = Prism.languages.bash;\n    /* Patterns in command substitution. */\n\n    var toBeCopied = ['comment', 'function-name', 'for-or-select', 'assign-left', 'string', 'environment', 'function', 'keyword', 'builtin', 'boolean', 'file-descriptor', 'operator', 'punctuation', 'number'];\n    var inside = insideString.variable[1].inside;\n\n    for (var i = 0; i < toBeCopied.length; i++) {\n      inside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]];\n    }\n\n    Prism.languages.shell = Prism.languages.bash;\n  })(Prism);\n}\n\nvar bash$1 = bash_1;\nvar css_1 = css$1;\ncss$1.displayName = 'css';\ncss$1.aliases = [];\n\nfunction css$1(Prism) {\n  (function (Prism) {\n    var string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n    Prism.languages.css = {\n      comment: /\\/\\*[\\s\\S]*?\\*\\//,\n      atrule: {\n        pattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n        inside: {\n          rule: /^@[\\w-]+/,\n          'selector-function-argument': {\n            pattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n            lookbehind: true,\n            alias: 'selector'\n          },\n          keyword: {\n            pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n            lookbehind: true\n          } // See rest below\n\n        }\n      },\n      url: {\n        // https://drafts.csswg.org/css-values-3/#urls\n        pattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n        greedy: true,\n        inside: {\n          function: /^url/i,\n          punctuation: /^\\(|\\)$/,\n          string: {\n            pattern: RegExp('^' + string.source + '$'),\n            alias: 'url'\n          }\n        }\n      },\n      selector: {\n        pattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n        lookbehind: true\n      },\n      string: {\n        pattern: string,\n        greedy: true\n      },\n      property: {\n        pattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n        lookbehind: true\n      },\n      important: /!important\\b/i,\n      function: {\n        pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n        lookbehind: true\n      },\n      punctuation: /[(){};:,]/\n    };\n    Prism.languages.css['atrule'].inside.rest = Prism.languages.css;\n    var markup = Prism.languages.markup;\n\n    if (markup) {\n      markup.tag.addInlined('style', 'css');\n      markup.tag.addAttribute('style', 'css');\n    }\n  })(Prism);\n}\n\nvar css$2 = css_1;\nvar jsExtras_1 = jsExtras;\njsExtras.displayName = 'jsExtras';\njsExtras.aliases = [];\n\nfunction jsExtras(Prism) {\n  (function (Prism) {\n    Prism.languages.insertBefore('javascript', 'function-variable', {\n      'method-variable': {\n        pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function-variable'].pattern.source),\n        lookbehind: true,\n        alias: ['function-variable', 'method', 'function', 'property-access']\n      }\n    });\n    Prism.languages.insertBefore('javascript', 'function', {\n      method: {\n        pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function'].source),\n        lookbehind: true,\n        alias: ['function', 'property-access']\n      }\n    });\n    Prism.languages.insertBefore('javascript', 'constant', {\n      'known-class-name': [{\n        // standard built-ins\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n        pattern: /\\b(?:(?:(?:Uint|Int)(?:8|16|32)|Uint8Clamped|Float(?:32|64))?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|(?:Weak)?(?:Set|Map)|WebAssembly)\\b/,\n        alias: 'class-name'\n      }, {\n        // errors\n        pattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n        alias: 'class-name'\n      }]\n    });\n    /**\n     * Replaces the `<ID>` placeholder in the given pattern with a pattern for general JS identifiers.\n     *\n     * @param {string} source\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n\n    function withId(source, flags) {\n      return RegExp(source.replace(/<ID>/g, function () {\n        return /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/.source;\n      }), flags);\n    }\n\n    Prism.languages.insertBefore('javascript', 'keyword', {\n      imports: {\n        // https://tc39.es/ecma262/#sec-imports\n        pattern: withId(/(\\bimport\\b\\s*)(?:<ID>(?:\\s*,\\s*(?:\\*\\s*as\\s+<ID>|\\{[^{}]*\\}))?|\\*\\s*as\\s+<ID>|\\{[^{}]*\\})(?=\\s*\\bfrom\\b)/.source),\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      exports: {\n        // https://tc39.es/ecma262/#sec-exports\n        pattern: withId(/(\\bexport\\b\\s*)(?:\\*(?:\\s*as\\s+<ID>)?(?=\\s*\\bfrom\\b)|\\{[^{}]*\\})/.source),\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      }\n    });\n    Prism.languages.javascript['keyword'].unshift({\n      pattern: /\\b(?:as|default|export|from|import)\\b/,\n      alias: 'module'\n    }, {\n      pattern: /\\b(?:await|break|catch|continue|do|else|for|finally|if|return|switch|throw|try|while|yield)\\b/,\n      alias: 'control-flow'\n    }, {\n      pattern: /\\bnull\\b/,\n      alias: ['null', 'nil']\n    }, {\n      pattern: /\\bundefined\\b/,\n      alias: 'nil'\n    });\n    Prism.languages.insertBefore('javascript', 'operator', {\n      spread: {\n        pattern: /\\.{3}/,\n        alias: 'operator'\n      },\n      arrow: {\n        pattern: /=>/,\n        alias: 'operator'\n      }\n    });\n    Prism.languages.insertBefore('javascript', 'punctuation', {\n      'property-access': {\n        pattern: withId(/(\\.\\s*)#?<ID>/.source),\n        lookbehind: true\n      },\n      'maybe-class-name': {\n        pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n        lookbehind: true\n      },\n      dom: {\n        // this contains only a few commonly used DOM variables\n        pattern: /\\b(?:document|location|navigator|performance|(?:local|session)Storage|window)\\b/,\n        alias: 'variable'\n      },\n      console: {\n        pattern: /\\bconsole(?=\\s*\\.)/,\n        alias: 'class-name'\n      }\n    }); // add 'maybe-class-name' to tokens which might be a class name\n\n    var maybeClassNameTokens = ['function', 'function-variable', 'method', 'method-variable', 'property-access'];\n\n    for (var i = 0; i < maybeClassNameTokens.length; i++) {\n      var token = maybeClassNameTokens[i];\n      var value = Prism.languages.javascript[token]; // convert regex to object\n\n      if (Prism.util.type(value) === 'RegExp') {\n        value = Prism.languages.javascript[token] = {\n          pattern: value\n        };\n      } // keep in mind that we don't support arrays\n\n\n      var inside = value.inside || {};\n      value.inside = inside;\n      inside['maybe-class-name'] = /^[A-Z][\\s\\S]*/;\n    }\n  })(Prism);\n}\n\nvar jsExtras$1 = jsExtras_1;\nvar json_1 = json;\njson.displayName = 'json';\njson.aliases = ['webmanifest'];\n\nfunction json(Prism) {\n  // https://www.json.org/json-en.html\n  Prism.languages.json = {\n    property: {\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n      lookbehind: true,\n      greedy: true\n    },\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      greedy: true\n    },\n    number: /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n    punctuation: /[{}[\\],]/,\n    operator: /:/,\n    boolean: /\\b(?:true|false)\\b/,\n    null: {\n      pattern: /\\bnull\\b/,\n      alias: 'keyword'\n    }\n  };\n  Prism.languages.webmanifest = Prism.languages.json;\n}\n\nvar json$1 = json_1;\nvar graphql_1 = graphql;\ngraphql.displayName = 'graphql';\ngraphql.aliases = [];\n\nfunction graphql(Prism) {\n  Prism.languages.graphql = {\n    comment: /#.*/,\n    description: {\n      pattern: /(?:\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")(?=\\s*[a-z_])/i,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        'language-markdown': {\n          pattern: /(^\"(?:\"\")?)(?!\\1)[\\s\\S]+(?=\\1$)/,\n          lookbehind: true,\n          inside: Prism.languages.markdown\n        }\n      }\n    },\n    string: {\n      pattern: /\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    number: /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n    boolean: /\\b(?:true|false)\\b/,\n    variable: /\\$[a-z_]\\w*/i,\n    directive: {\n      pattern: /@[a-z_]\\w*/i,\n      alias: 'function'\n    },\n    'attr-name': {\n      pattern: /[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n      greedy: true\n    },\n    'atom-input': {\n      pattern: /[A-Z]\\w*Input(?=!?.*$)/m,\n      alias: 'class-name'\n    },\n    scalar: /\\b(?:Boolean|Float|ID|Int|String)\\b/,\n    constant: /\\b[A-Z][A-Z_\\d]*\\b/,\n    'class-name': {\n      pattern: /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+|&\\s*|:\\s*|\\[)[A-Z_]\\w*/,\n      lookbehind: true\n    },\n    fragment: {\n      pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    'definition-mutation': {\n      pattern: /(\\bmutation\\s+)[a-zA-Z_]\\w*/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    'definition-query': {\n      pattern: /(\\bquery\\s+)[a-zA-Z_]\\w*/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    keyword: /\\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\\b/,\n    operator: /[!=|&]|\\.{3}/,\n    'property-query': /\\w+(?=\\s*\\()/,\n    object: /\\w+(?=\\s*\\{)/,\n    punctuation: /[!(){}\\[\\]:=,]/,\n    property: /\\w+/\n  };\n  Prism.hooks.add('after-tokenize', function afterTokenizeGraphql(env) {\n    if (env.language !== 'graphql') {\n      return;\n    }\n    /**\n     * get the graphql token stream that we want to customize\n     *\n     * @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n     * @type {Token[]}\n     */\n\n\n    var validTokens = env.tokens.filter(function (token) {\n      return typeof token !== 'string' && token.type !== 'comment' && token.type !== 'scalar';\n    });\n    var currentIndex = 0;\n    /**\n     * Returns whether the token relative to the current index has the given type.\n     *\n     * @param {number} offset\n     * @returns {Token | undefined}\n     */\n\n    function getToken(offset) {\n      return validTokens[currentIndex + offset];\n    }\n    /**\n     * Returns whether the token relative to the current index has the given type.\n     *\n     * @param {readonly string[]} types\n     * @param {number} [offset=0]\n     * @returns {boolean}\n     */\n\n\n    function isTokenType(types, offset) {\n      offset = offset || 0;\n\n      for (var i = 0; i < types.length; i++) {\n        var token = getToken(i + offset);\n\n        if (!token || token.type !== types[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n    /**\n     * Returns the index of the closing bracket to an opening bracket.\n     *\n     * It is assumed that `token[currentIndex - 1]` is an opening bracket.\n     *\n     * If no closing bracket could be found, `-1` will be returned.\n     *\n     * @param {RegExp} open\n     * @param {RegExp} close\n     * @returns {number}\n     */\n\n\n    function findClosingBracket(open, close) {\n      var stackHeight = 1;\n\n      for (var i = currentIndex; i < validTokens.length; i++) {\n        var token = validTokens[i];\n        var content = token.content;\n\n        if (token.type === 'punctuation' && typeof content === 'string') {\n          if (open.test(content)) {\n            stackHeight++;\n          } else if (close.test(content)) {\n            stackHeight--;\n\n            if (stackHeight === 0) {\n              return i;\n            }\n          }\n        }\n      }\n\n      return -1;\n    }\n    /**\n     * Adds an alias to the given token.\n     *\n     * @param {Token} token\n     * @param {string} alias\n     * @returns {void}\n     */\n\n\n    function addAlias(token, alias) {\n      var aliases = token.alias;\n\n      if (!aliases) {\n        token.alias = aliases = [];\n      } else if (!Array.isArray(aliases)) {\n        token.alias = aliases = [aliases];\n      }\n\n      aliases.push(alias);\n    }\n\n    for (; currentIndex < validTokens.length;) {\n      var startToken = validTokens[currentIndex++]; // add special aliases for mutation tokens\n\n      if (startToken.type === 'keyword' && startToken.content === 'mutation') {\n        // any array of the names of all input variables (if any)\n        var inputVariables = [];\n\n        if (isTokenType(['definition-mutation', 'punctuation']) && getToken(1).content === '(') {\n          // definition\n          currentIndex += 2; // skip 'definition-mutation' and 'punctuation'\n\n          var definitionEnd = findClosingBracket(/^\\($/, /^\\)$/);\n\n          if (definitionEnd === -1) {\n            continue;\n          } // find all input variables\n\n\n          for (; currentIndex < definitionEnd; currentIndex++) {\n            var t = getToken(0);\n\n            if (t.type === 'variable') {\n              addAlias(t, 'variable-input');\n              inputVariables.push(t.content);\n            }\n          }\n\n          currentIndex = definitionEnd + 1;\n        }\n\n        if (isTokenType(['punctuation', 'property-query']) && getToken(0).content === '{') {\n          currentIndex++; // skip opening bracket\n\n          addAlias(getToken(0), 'property-mutation');\n\n          if (inputVariables.length > 0) {\n            var mutationEnd = findClosingBracket(/^\\{$/, /^\\}$/);\n\n            if (mutationEnd === -1) {\n              continue;\n            } // give references to input variables a special alias\n\n\n            for (var i = currentIndex; i < mutationEnd; i++) {\n              var varToken = validTokens[i];\n\n              if (varToken.type === 'variable' && inputVariables.indexOf(varToken.content) >= 0) {\n                addAlias(varToken, 'variable-input');\n              }\n            }\n          }\n        }\n      }\n    }\n  });\n}\n\nvar graphql$1 = graphql_1;\nvar markup_1 = markup$1;\nmarkup$1.displayName = 'markup';\nmarkup$1.aliases = ['html', 'mathml', 'svg', 'xml', 'ssml', 'atom', 'rss'];\n\nfunction markup$1(Prism) {\n  Prism.languages.markup = {\n    comment: {\n      pattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n      greedy: true\n    },\n    prolog: {\n      pattern: /<\\?[\\s\\S]+?\\?>/,\n      greedy: true\n    },\n    doctype: {\n      // https://www.w3.org/TR/xml/#NT-doctypedecl\n      pattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n      greedy: true,\n      inside: {\n        'internal-subset': {\n          pattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n          lookbehind: true,\n          greedy: true,\n          inside: null // see below\n\n        },\n        string: {\n          pattern: /\"[^\"]*\"|'[^']*'/,\n          greedy: true\n        },\n        punctuation: /^<!|>$|[[\\]]/,\n        'doctype-tag': /^DOCTYPE/i,\n        name: /[^\\s<>'\"]+/\n      }\n    },\n    cdata: {\n      pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n      greedy: true\n    },\n    tag: {\n      pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n      greedy: true,\n      inside: {\n        tag: {\n          pattern: /^<\\/?[^\\s>\\/]+/,\n          inside: {\n            punctuation: /^<\\/?/,\n            namespace: /^[^\\s>\\/:]+:/\n          }\n        },\n        'special-attr': [],\n        'attr-value': {\n          pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n          inside: {\n            punctuation: [{\n              pattern: /^=/,\n              alias: 'attr-equals'\n            }, /\"|'/]\n          }\n        },\n        punctuation: /\\/?>/,\n        'attr-name': {\n          pattern: /[^\\s>\\/]+/,\n          inside: {\n            namespace: /^[^\\s>\\/:]+:/\n          }\n        }\n      }\n    },\n    entity: [{\n      pattern: /&[\\da-z]{1,8};/i,\n      alias: 'named-entity'\n    }, /&#x?[\\da-f]{1,8};/i]\n  };\n  Prism.languages.markup['tag'].inside['attr-value'].inside['entity'] = Prism.languages.markup['entity'];\n  Prism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup; // Plugin to make entity title show the real entity, idea by Roman Komarov\n\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type === 'entity') {\n      env.attributes['title'] = env.content.value.replace(/&amp;/, '&');\n    }\n  });\n  Object.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n    /**\n     * Adds an inlined language to markup.\n     *\n     * An example of an inlined language is CSS with `<style>` tags.\n     *\n     * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n     * case insensitive.\n     * @param {string} lang The language key.\n     * @example\n     * addInlined('style', 'css');\n     */\n    value: function addInlined(tagName, lang) {\n      var includedCdataInside = {};\n      includedCdataInside['language-' + lang] = {\n        pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n        lookbehind: true,\n        inside: Prism.languages[lang]\n      };\n      includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n      var inside = {\n        'included-cdata': {\n          pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n          inside: includedCdataInside\n        }\n      };\n      inside['language-' + lang] = {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages[lang]\n      };\n      var def = {};\n      def[tagName] = {\n        pattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () {\n          return tagName;\n        }), 'i'),\n        lookbehind: true,\n        greedy: true,\n        inside: inside\n      };\n      Prism.languages.insertBefore('markup', 'cdata', def);\n    }\n  });\n  Object.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n    /**\n     * Adds an pattern to highlight languages embedded in HTML attributes.\n     *\n     * An example of an inlined language is CSS with `style` attributes.\n     *\n     * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n     * case insensitive.\n     * @param {string} lang The language key.\n     * @example\n     * addAttribute('style', 'css');\n     */\n    value: function value(attrName, lang) {\n      Prism.languages.markup.tag.inside['special-attr'].push({\n        pattern: RegExp(/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source, 'i'),\n        lookbehind: true,\n        inside: {\n          'attr-name': /^[^\\s=]+/,\n          'attr-value': {\n            pattern: /=[\\s\\S]+/,\n            inside: {\n              value: {\n                pattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n                lookbehind: true,\n                alias: [lang, 'language-' + lang],\n                inside: Prism.languages[lang]\n              },\n              punctuation: [{\n                pattern: /^=/,\n                alias: 'attr-equals'\n              }, /\"|'/]\n            }\n          }\n        }\n      });\n    }\n  });\n  Prism.languages.html = Prism.languages.markup;\n  Prism.languages.mathml = Prism.languages.markup;\n  Prism.languages.svg = Prism.languages.markup;\n  Prism.languages.xml = Prism.languages.extend('markup', {});\n  Prism.languages.ssml = Prism.languages.xml;\n  Prism.languages.atom = Prism.languages.xml;\n  Prism.languages.rss = Prism.languages.xml;\n}\n\nvar markup$2 = markup_1;\nvar markdown_1 = markdown;\nmarkdown.displayName = 'markdown';\nmarkdown.aliases = ['md'];\n\nfunction markdown(Prism) {\n  (function (Prism) {\n    // Allow only one line break\n    var inner = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\n|\\r\\n?)(?![\\r\\n]))/.source;\n    /**\n     * This function is intended for the creation of the bold or italic pattern.\n     *\n     * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.\n     *\n     * _Note:_ Keep in mind that this adds a capturing group.\n     *\n     * @param {string} pattern\n     * @returns {RegExp}\n     */\n\n    function createInline(pattern) {\n      pattern = pattern.replace(/<inner>/g, function () {\n        return inner;\n      });\n      return RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + '(?:' + pattern + ')');\n    }\n\n    var tableCell = /(?:\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/.source;\n    var tableRow = /\\|?__(?:\\|__)+\\|?(?:(?:\\n|\\r\\n?)|(?![\\s\\S]))/.source.replace(/__/g, function () {\n      return tableCell;\n    });\n    var tableLine = /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\n|\\r\\n?)/.source;\n    Prism.languages.markdown = Prism.languages.extend('markup', {});\n    Prism.languages.insertBefore('markdown', 'prolog', {\n      'front-matter-block': {\n        pattern: /(^(?:\\s*[\\r\\n])?)---(?!.)[\\s\\S]*?[\\r\\n]---(?!.)/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          punctuation: /^---|---$/,\n          'font-matter': {\n            pattern: /\\S+(?:\\s+\\S+)*/,\n            alias: ['yaml', 'language-yaml'],\n            inside: Prism.languages.yaml\n          }\n        }\n      },\n      blockquote: {\n        // > ...\n        pattern: /^>(?:[\\t ]*>)*/m,\n        alias: 'punctuation'\n      },\n      table: {\n        pattern: RegExp('^' + tableRow + tableLine + '(?:' + tableRow + ')*', 'm'),\n        inside: {\n          'table-data-rows': {\n            pattern: RegExp('^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'),\n            lookbehind: true,\n            inside: {\n              'table-data': {\n                pattern: RegExp(tableCell),\n                inside: Prism.languages.markdown\n              },\n              punctuation: /\\|/\n            }\n          },\n          'table-line': {\n            pattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),\n            lookbehind: true,\n            inside: {\n              punctuation: /\\||:?-{3,}:?/\n            }\n          },\n          'table-header-row': {\n            pattern: RegExp('^' + tableRow + '$'),\n            inside: {\n              'table-header': {\n                pattern: RegExp(tableCell),\n                alias: 'important',\n                inside: Prism.languages.markdown\n              },\n              punctuation: /\\|/\n            }\n          }\n        }\n      },\n      code: [{\n        // Prefixed by 4 spaces or 1 tab and preceded by an empty line\n        pattern: /((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/,\n        lookbehind: true,\n        alias: 'keyword'\n      }, {\n        // ```optional language\n        // code block\n        // ```\n        pattern: /^```[\\s\\S]*?^```$/m,\n        greedy: true,\n        inside: {\n          'code-block': {\n            pattern: /^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m,\n            lookbehind: true\n          },\n          'code-language': {\n            pattern: /^(```).+/,\n            lookbehind: true\n          },\n          punctuation: /```/\n        }\n      }],\n      title: [{\n        // title 1\n        // =======\n        // title 2\n        // -------\n        pattern: /\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m,\n        alias: 'important',\n        inside: {\n          punctuation: /==+$|--+$/\n        }\n      }, {\n        // # title 1\n        // ###### title 6\n        pattern: /(^\\s*)#.+/m,\n        lookbehind: true,\n        alias: 'important',\n        inside: {\n          punctuation: /^#+|#+$/\n        }\n      }],\n      hr: {\n        // ***\n        // ---\n        // * * *\n        // -----------\n        pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      list: {\n        // * item\n        // + item\n        // - item\n        // 1. item\n        pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      'url-reference': {\n        // [id]: http://example.com \"Optional title\"\n        // [id]: http://example.com 'Optional title'\n        // [id]: http://example.com (Optional title)\n        // [id]: <http://example.com> \"Optional title\"\n        pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n        inside: {\n          variable: {\n            pattern: /^(!?\\[)[^\\]]+/,\n            lookbehind: true\n          },\n          string: /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n          punctuation: /^[\\[\\]!:]|[<>]/\n        },\n        alias: 'url'\n      },\n      bold: {\n        // **strong**\n        // __strong__\n        // allow one nested instance of italic text using the same delimiter\n        pattern: createInline(/\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\b|\\*\\*(?:(?!\\*)<inner>|\\*(?:(?!\\*)<inner>)+\\*)+\\*\\*/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /(^..)[\\s\\S]+(?=..$)/,\n            lookbehind: true,\n            inside: {} // see below\n\n          },\n          punctuation: /\\*\\*|__/\n        }\n      },\n      italic: {\n        // *em*\n        // _em_\n        // allow one nested instance of bold text using the same delimiter\n        pattern: createInline(/\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\b|\\*(?:(?!\\*)<inner>|\\*\\*(?:(?!\\*)<inner>)+\\*\\*)+\\*/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /(^.)[\\s\\S]+(?=.$)/,\n            lookbehind: true,\n            inside: {} // see below\n\n          },\n          punctuation: /[*_]/\n        }\n      },\n      strike: {\n        // ~~strike through~~\n        // ~strike~\n        // eslint-disable-next-line regexp/strict\n        pattern: createInline(/(~~?)(?:(?!~)<inner>)+\\2/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n            lookbehind: true,\n            inside: {} // see below\n\n          },\n          punctuation: /~~?/\n        }\n      },\n      'code-snippet': {\n        // `code`\n        // ``code``\n        pattern: /(^|[^\\\\`])(?:``[^`\\r\\n]+(?:`[^`\\r\\n]+)*``(?!`)|`[^`\\r\\n]+`(?!`))/,\n        lookbehind: true,\n        greedy: true,\n        alias: ['code', 'keyword']\n      },\n      url: {\n        // [example](http://example.com \"Optional title\")\n        // [example][id]\n        // [example] [id]\n        pattern: createInline(/!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)|[ \\t]?\\[(?:(?!\\])<inner>)+\\])/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          operator: /^!/,\n          content: {\n            pattern: /(^\\[)[^\\]]+(?=\\])/,\n            lookbehind: true,\n            inside: {} // see below\n\n          },\n          variable: {\n            pattern: /(^\\][ \\t]?\\[)[^\\]]+(?=\\]$)/,\n            lookbehind: true\n          },\n          url: {\n            pattern: /(^\\]\\()[^\\s)]+/,\n            lookbehind: true\n          },\n          string: {\n            pattern: /(^[ \\t]+)\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/,\n            lookbehind: true\n          }\n        }\n      }\n    });\n    ['url', 'bold', 'italic', 'strike'].forEach(function (token) {\n      ['url', 'bold', 'italic', 'strike', 'code-snippet'].forEach(function (inside) {\n        if (token !== inside) {\n          Prism.languages.markdown[token].inside.content.inside[inside] = Prism.languages.markdown[inside];\n        }\n      });\n    });\n    Prism.hooks.add('after-tokenize', function (env) {\n      if (env.language !== 'markdown' && env.language !== 'md') {\n        return;\n      }\n\n      function walkTokens(tokens) {\n        if (!tokens || typeof tokens === 'string') {\n          return;\n        }\n\n        for (var i = 0, l = tokens.length; i < l; i++) {\n          var token = tokens[i];\n\n          if (token.type !== 'code') {\n            walkTokens(token.content);\n            continue;\n          }\n          /*\n           * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token\n           * is optional. But the grammar is defined so that there is only one case we have to handle:\n           *\n           * token.content = [\n           *     <span class=\"punctuation\">```</span>,\n           *     <span class=\"code-language\">xxxx</span>,\n           *     '\\n', // exactly one new lines (\\r or \\n or \\r\\n)\n           *     <span class=\"code-block\">...</span>,\n           *     '\\n', // exactly one new lines again\n           *     <span class=\"punctuation\">```</span>\n           * ];\n           */\n\n\n          var codeLang = token.content[1];\n          var codeBlock = token.content[3];\n\n          if (codeLang && codeBlock && codeLang.type === 'code-language' && codeBlock.type === 'code-block' && typeof codeLang.content === 'string') {\n            // this might be a language that Prism does not support\n            // do some replacements to support C++, C#, and F#\n            var lang = codeLang.content.replace(/\\b#/g, 'sharp').replace(/\\b\\+\\+/g, 'pp'); // only use the first word\n\n            lang = (/[a-z][\\w-]*/i.exec(lang) || [''])[0].toLowerCase();\n            var alias = 'language-' + lang; // add alias\n\n            if (!codeBlock.alias) {\n              codeBlock.alias = [alias];\n            } else if (typeof codeBlock.alias === 'string') {\n              codeBlock.alias = [codeBlock.alias, alias];\n            } else {\n              codeBlock.alias.push(alias);\n            }\n          }\n        }\n      }\n\n      walkTokens(env.tokens);\n    });\n    Prism.hooks.add('wrap', function (env) {\n      if (env.type !== 'code-block') {\n        return;\n      }\n\n      var codeLang = '';\n\n      for (var i = 0, l = env.classes.length; i < l; i++) {\n        var cls = env.classes[i];\n        var match = /language-(.+)/.exec(cls);\n\n        if (match) {\n          codeLang = match[1];\n          break;\n        }\n      }\n\n      var grammar = Prism.languages[codeLang];\n\n      if (!grammar) {\n        if (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {\n          var id = 'md-' + new Date().valueOf() + '-' + Math.floor(Math.random() * 1e16);\n          env.attributes['id'] = id;\n          Prism.plugins.autoloader.loadLanguages(codeLang, function () {\n            var ele = document.getElementById(id);\n\n            if (ele) {\n              ele.innerHTML = Prism.highlight(ele.textContent, Prism.languages[codeLang], codeLang);\n            }\n          });\n        }\n      } else {\n        env.content = Prism.highlight(textContent(env.content.value), grammar, codeLang);\n      }\n    });\n    var tagPattern = RegExp(Prism.languages.markup.tag.pattern.source, 'gi');\n    /**\n     * A list of known entity names.\n     *\n     * This will always be incomplete to save space. The current list is the one used by lowdash's unescape function.\n     *\n     * @see {@link https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/unescape.js#L2}\n     */\n\n    var KNOWN_ENTITY_NAMES = {\n      amp: '&',\n      lt: '<',\n      gt: '>',\n      quot: '\"'\n    }; // IE 11 doesn't support `String.fromCodePoint`\n\n    var fromCodePoint = String.fromCodePoint || String.fromCharCode;\n    /**\n     * Returns the text content of a given HTML source code string.\n     *\n     * @param {string} html\n     * @returns {string}\n     */\n\n    function textContent(html) {\n      // remove all tags\n      var text = html.replace(tagPattern, ''); // decode known entities\n\n      text = text.replace(/&(\\w{1,8}|#x?[\\da-f]{1,8});/gi, function (m, code) {\n        code = code.toLowerCase();\n\n        if (code[0] === '#') {\n          var value;\n\n          if (code[1] === 'x') {\n            value = parseInt(code.slice(2), 16);\n          } else {\n            value = Number(code.slice(1));\n          }\n\n          return fromCodePoint(value);\n        } else {\n          var known = KNOWN_ENTITY_NAMES[code];\n\n          if (known) {\n            return known;\n          } // unable to decode\n\n\n          return m;\n        }\n      });\n      return text;\n    }\n\n    Prism.languages.md = Prism.languages.markdown;\n  })(Prism);\n}\n\nvar markdown$1 = markdown_1;\nvar yaml_1 = yaml;\nyaml.displayName = 'yaml';\nyaml.aliases = ['yml'];\n\nfunction yaml(Prism) {\n  (function (Prism) {\n    // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\n    // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\n    var anchorOrAlias = /[*&][^\\s[\\]{},]+/; // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\n\n    var tag = /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/; // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\n\n    var properties = '(?:' + tag.source + '(?:[ \\t]+' + anchorOrAlias.source + ')?|' + anchorOrAlias.source + '(?:[ \\t]+' + tag.source + ')?)'; // https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)\n    // This is a simplified version that doesn't support \"#\" and multiline keys\n    // All these long scarry character classes are simplified versions of YAML's characters\n\n    var plainKey = /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g, function () {\n      return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/.source;\n    });\n    var string = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source;\n    /**\n     *\n     * @param {string} value\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n\n    function createValuePattern(value, flags) {\n      flags = (flags || '').replace(/m/g, '') + 'm'; // add m flag\n\n      var pattern = /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|\\]|\\}|(?:[\\r\\n]\\s*)?#))/.source.replace(/<<prop>>/g, function () {\n        return properties;\n      }).replace(/<<value>>/g, function () {\n        return value;\n      });\n      return RegExp(pattern, flags);\n    }\n\n    Prism.languages.yaml = {\n      scalar: {\n        pattern: RegExp(/([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source.replace(/<<prop>>/g, function () {\n          return properties;\n        })),\n        lookbehind: true,\n        alias: 'string'\n      },\n      comment: /#.*/,\n      key: {\n        pattern: RegExp(/((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source.replace(/<<prop>>/g, function () {\n          return properties;\n        }).replace(/<<key>>/g, function () {\n          return '(?:' + plainKey + '|' + string + ')';\n        })),\n        lookbehind: true,\n        greedy: true,\n        alias: 'atrule'\n      },\n      directive: {\n        pattern: /(^[ \\t]*)%.+/m,\n        lookbehind: true,\n        alias: 'important'\n      },\n      datetime: {\n        pattern: createValuePattern(/\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/.source),\n        lookbehind: true,\n        alias: 'number'\n      },\n      boolean: {\n        pattern: createValuePattern(/true|false/.source, 'i'),\n        lookbehind: true,\n        alias: 'important'\n      },\n      null: {\n        pattern: createValuePattern(/null|~/.source, 'i'),\n        lookbehind: true,\n        alias: 'important'\n      },\n      string: {\n        pattern: createValuePattern(string),\n        lookbehind: true,\n        greedy: true\n      },\n      number: {\n        pattern: createValuePattern(/[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/.source, 'i'),\n        lookbehind: true\n      },\n      tag: tag,\n      important: anchorOrAlias,\n      punctuation: /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n    };\n    Prism.languages.yml = Prism.languages.yaml;\n  })(Prism);\n}\n\nvar yaml$1 = yaml_1;\nvar typescript_1 = typescript;\ntypescript.displayName = 'typescript';\ntypescript.aliases = ['ts'];\n\nfunction typescript(Prism) {\n  (function (Prism) {\n    Prism.languages.typescript = Prism.languages.extend('javascript', {\n      'class-name': {\n        pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n        lookbehind: true,\n        greedy: true,\n        inside: null // see below\n\n      },\n      builtin: /\\b(?:string|Function|any|number|boolean|Array|symbol|console|Promise|unknown|never)\\b/\n    }); // The keywords TypeScript adds to JavaScript\n\n    Prism.languages.typescript.keyword.push(/\\b(?:abstract|as|declare|implements|is|keyof|readonly|require)\\b/, // keywords that have to be followed by an identifier\n    /\\b(?:asserts|infer|interface|module|namespace|type)\\b(?=\\s*(?:[{_$a-zA-Z\\xA0-\\uFFFF]|$))/, // This is for `import type *, {}`\n    /\\btype\\b(?=\\s*(?:[\\{*]|$))/); // doesn't work with TS because TS is too complex\n\n    delete Prism.languages.typescript['parameter']; // a version of typescript specifically for highlighting types\n\n    var typeInside = Prism.languages.extend('typescript', {});\n    delete typeInside['class-name'];\n    Prism.languages.typescript['class-name'].inside = typeInside;\n    Prism.languages.insertBefore('typescript', 'function', {\n      decorator: {\n        pattern: /@[$\\w\\xA0-\\uFFFF]+/,\n        inside: {\n          at: {\n            pattern: /^@/,\n            alias: 'operator'\n          },\n          function: /^[\\s\\S]+/\n        }\n      },\n      'generic-function': {\n        // e.g. foo<T extends \"bar\" | \"baz\">( ...\n        pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n        greedy: true,\n        inside: {\n          function: /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n          generic: {\n            pattern: /<[\\s\\S]+/,\n            // everything after the first <\n            alias: 'class-name',\n            inside: typeInside\n          }\n        }\n      }\n    });\n    Prism.languages.ts = Prism.languages.typescript;\n  })(Prism);\n}\n\nvar typescript$1 = typescript_1;\nvar refractorJsx = jsx_1;\nvar refractorTypescript = typescript_1;\nvar tsx_1 = tsx;\ntsx.displayName = 'tsx';\ntsx.aliases = [];\n\nfunction tsx(Prism) {\n  Prism.register(refractorJsx);\n  Prism.register(refractorTypescript);\n\n  (function (Prism) {\n    var typescript = Prism.util.clone(Prism.languages.typescript);\n    Prism.languages.tsx = Prism.languages.extend('jsx', typescript); // This will prevent collisions between TSX tags and TS generic types.\n    // Idea by https://github.com/karlhorky\n    // Discussion: https://github.com/PrismJS/prism/issues/2594#issuecomment-710666928\n\n    var tag = Prism.languages.tsx.tag;\n    tag.pattern = RegExp(/(^|[^\\w$]|(?=<\\/))/.source + '(?:' + tag.pattern.source + ')', tag.pattern.flags);\n    tag.lookbehind = true;\n  })(Prism);\n}\n\nvar tsx$1 = tsx_1;\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? Object(arguments[i]) : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys.push.apply(ownKeys, Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n} //\n// Super simple, non-algorithmic solution since the\n// number of class names will not be greater than 4\n\n\nfunction powerSetPermutations(arr) {\n  var arrLength = arr.length;\n  if (arrLength === 0 || arrLength === 1) return arr;\n\n  if (arrLength === 2) {\n    // prettier-ignore\n    return [arr[0], arr[1], \"\".concat(arr[0], \".\").concat(arr[1]), \"\".concat(arr[1], \".\").concat(arr[0])];\n  }\n\n  if (arrLength === 3) {\n    return [arr[0], arr[1], arr[2], \"\".concat(arr[0], \".\").concat(arr[1]), \"\".concat(arr[0], \".\").concat(arr[2]), \"\".concat(arr[1], \".\").concat(arr[0]), \"\".concat(arr[1], \".\").concat(arr[2]), \"\".concat(arr[2], \".\").concat(arr[0]), \"\".concat(arr[2], \".\").concat(arr[1]), \"\".concat(arr[0], \".\").concat(arr[1], \".\").concat(arr[2]), \"\".concat(arr[0], \".\").concat(arr[2], \".\").concat(arr[1]), \"\".concat(arr[1], \".\").concat(arr[0], \".\").concat(arr[2]), \"\".concat(arr[1], \".\").concat(arr[2], \".\").concat(arr[0]), \"\".concat(arr[2], \".\").concat(arr[0], \".\").concat(arr[1]), \"\".concat(arr[2], \".\").concat(arr[1], \".\").concat(arr[0])];\n  }\n\n  if (arrLength >= 4) {\n    // Currently does not support more than 4 extra\n    // class names (after `.token` has been removed)\n    return [arr[0], arr[1], arr[2], arr[3], \"\".concat(arr[0], \".\").concat(arr[1]), \"\".concat(arr[0], \".\").concat(arr[2]), \"\".concat(arr[0], \".\").concat(arr[3]), \"\".concat(arr[1], \".\").concat(arr[0]), \"\".concat(arr[1], \".\").concat(arr[2]), \"\".concat(arr[1], \".\").concat(arr[3]), \"\".concat(arr[2], \".\").concat(arr[0]), \"\".concat(arr[2], \".\").concat(arr[1]), \"\".concat(arr[2], \".\").concat(arr[3]), \"\".concat(arr[3], \".\").concat(arr[0]), \"\".concat(arr[3], \".\").concat(arr[1]), \"\".concat(arr[3], \".\").concat(arr[2]), \"\".concat(arr[0], \".\").concat(arr[1], \".\").concat(arr[2]), \"\".concat(arr[0], \".\").concat(arr[1], \".\").concat(arr[3]), \"\".concat(arr[0], \".\").concat(arr[2], \".\").concat(arr[1]), \"\".concat(arr[0], \".\").concat(arr[2], \".\").concat(arr[3]), \"\".concat(arr[0], \".\").concat(arr[3], \".\").concat(arr[1]), \"\".concat(arr[0], \".\").concat(arr[3], \".\").concat(arr[2]), \"\".concat(arr[1], \".\").concat(arr[0], \".\").concat(arr[2]), \"\".concat(arr[1], \".\").concat(arr[0], \".\").concat(arr[3]), \"\".concat(arr[1], \".\").concat(arr[2], \".\").concat(arr[0]), \"\".concat(arr[1], \".\").concat(arr[2], \".\").concat(arr[3]), \"\".concat(arr[1], \".\").concat(arr[3], \".\").concat(arr[0]), \"\".concat(arr[1], \".\").concat(arr[3], \".\").concat(arr[2]), \"\".concat(arr[2], \".\").concat(arr[0], \".\").concat(arr[1]), \"\".concat(arr[2], \".\").concat(arr[0], \".\").concat(arr[3]), \"\".concat(arr[2], \".\").concat(arr[1], \".\").concat(arr[0]), \"\".concat(arr[2], \".\").concat(arr[1], \".\").concat(arr[3]), \"\".concat(arr[2], \".\").concat(arr[3], \".\").concat(arr[0]), \"\".concat(arr[2], \".\").concat(arr[3], \".\").concat(arr[1]), \"\".concat(arr[3], \".\").concat(arr[0], \".\").concat(arr[1]), \"\".concat(arr[3], \".\").concat(arr[0], \".\").concat(arr[2]), \"\".concat(arr[3], \".\").concat(arr[1], \".\").concat(arr[0]), \"\".concat(arr[3], \".\").concat(arr[1], \".\").concat(arr[2]), \"\".concat(arr[3], \".\").concat(arr[2], \".\").concat(arr[0]), \"\".concat(arr[3], \".\").concat(arr[2], \".\").concat(arr[1]), \"\".concat(arr[0], \".\").concat(arr[1], \".\").concat(arr[2], \".\").concat(arr[3]), \"\".concat(arr[0], \".\").concat(arr[1], \".\").concat(arr[3], \".\").concat(arr[2]), \"\".concat(arr[0], \".\").concat(arr[2], \".\").concat(arr[1], \".\").concat(arr[3]), \"\".concat(arr[0], \".\").concat(arr[2], \".\").concat(arr[3], \".\").concat(arr[1]), \"\".concat(arr[0], \".\").concat(arr[3], \".\").concat(arr[1], \".\").concat(arr[2]), \"\".concat(arr[0], \".\").concat(arr[3], \".\").concat(arr[2], \".\").concat(arr[1]), \"\".concat(arr[1], \".\").concat(arr[0], \".\").concat(arr[2], \".\").concat(arr[3]), \"\".concat(arr[1], \".\").concat(arr[0], \".\").concat(arr[3], \".\").concat(arr[2]), \"\".concat(arr[1], \".\").concat(arr[2], \".\").concat(arr[0], \".\").concat(arr[3]), \"\".concat(arr[1], \".\").concat(arr[2], \".\").concat(arr[3], \".\").concat(arr[0]), \"\".concat(arr[1], \".\").concat(arr[3], \".\").concat(arr[0], \".\").concat(arr[2]), \"\".concat(arr[1], \".\").concat(arr[3], \".\").concat(arr[2], \".\").concat(arr[0]), \"\".concat(arr[2], \".\").concat(arr[0], \".\").concat(arr[1], \".\").concat(arr[3]), \"\".concat(arr[2], \".\").concat(arr[0], \".\").concat(arr[3], \".\").concat(arr[1]), \"\".concat(arr[2], \".\").concat(arr[1], \".\").concat(arr[0], \".\").concat(arr[3]), \"\".concat(arr[2], \".\").concat(arr[1], \".\").concat(arr[3], \".\").concat(arr[0]), \"\".concat(arr[2], \".\").concat(arr[3], \".\").concat(arr[0], \".\").concat(arr[1]), \"\".concat(arr[2], \".\").concat(arr[3], \".\").concat(arr[1], \".\").concat(arr[0]), \"\".concat(arr[3], \".\").concat(arr[0], \".\").concat(arr[1], \".\").concat(arr[2]), \"\".concat(arr[3], \".\").concat(arr[0], \".\").concat(arr[2], \".\").concat(arr[1]), \"\".concat(arr[3], \".\").concat(arr[1], \".\").concat(arr[0], \".\").concat(arr[2]), \"\".concat(arr[3], \".\").concat(arr[1], \".\").concat(arr[2], \".\").concat(arr[0]), \"\".concat(arr[3], \".\").concat(arr[2], \".\").concat(arr[0], \".\").concat(arr[1]), \"\".concat(arr[3], \".\").concat(arr[2], \".\").concat(arr[1], \".\").concat(arr[0])];\n  }\n}\n\nvar classNameCombinations = {};\n\nfunction getClassNameCombinations(classNames) {\n  if (classNames.length === 0 || classNames.length === 1) return classNames;\n  var key = classNames.join('.');\n\n  if (!classNameCombinations[key]) {\n    classNameCombinations[key] = powerSetPermutations(classNames);\n  }\n\n  return classNameCombinations[key];\n}\n\nfunction createStyleObject(classNames) {\n  var elementStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var stylesheet = arguments.length > 2 ? arguments[2] : undefined;\n  var nonTokenClassNames = classNames.filter(function (className) {\n    return className !== 'token';\n  });\n  var classNamesCombinations = getClassNameCombinations(nonTokenClassNames);\n  return classNamesCombinations.reduce(function (styleObject, className) {\n    return _objectSpread({}, styleObject, stylesheet[className]);\n  }, elementStyle);\n}\n\nfunction createClassNameString(classNames) {\n  return classNames.join(' ');\n}\n\nfunction createChildren(stylesheet, useInlineStyles) {\n  var childrenCount = 0;\n  return function (children) {\n    childrenCount += 1;\n    return children.map(function (child, i) {\n      return createElement({\n        node: child,\n        stylesheet: stylesheet,\n        useInlineStyles: useInlineStyles,\n        key: \"code-segment-\".concat(childrenCount, \"-\").concat(i)\n      });\n    });\n  };\n}\n\nfunction createElement(_ref) {\n  var node = _ref.node,\n      stylesheet = _ref.stylesheet,\n      _ref$style = _ref.style,\n      style = _ref$style === void 0 ? {} : _ref$style,\n      useInlineStyles = _ref.useInlineStyles,\n      key = _ref.key;\n  var properties = node.properties,\n      type = node.type,\n      TagName = node.tagName,\n      value = node.value;\n\n  if (type === 'text') {\n    return value;\n  } else if (TagName) {\n    var childrenCreator = createChildren(stylesheet, useInlineStyles);\n    var props;\n\n    if (!useInlineStyles) {\n      props = _objectSpread({}, properties, {\n        className: createClassNameString(properties.className)\n      });\n    } else {\n      var allStylesheetSelectors = Object.keys(stylesheet).reduce(function (classes, selector) {\n        selector.split('.').forEach(function (className) {\n          if (!classes.includes(className)) classes.push(className);\n        });\n        return classes;\n      }, []); // For compatibility with older versions of react-syntax-highlighter\n\n      var startingClassName = properties.className && properties.className.includes('token') ? ['token'] : [];\n      var className = properties.className && startingClassName.concat(properties.className.filter(function (className) {\n        return !allStylesheetSelectors.includes(className);\n      }));\n      props = _objectSpread({}, properties, {\n        className: createClassNameString(className) || undefined,\n        style: createStyleObject(properties.className, Object.assign({}, properties.style, style), stylesheet)\n      });\n    }\n\n    var children = childrenCreator(node.children);\n    return React__default.createElement(TagName, _extends({\n      key: key\n    }, props), children);\n  }\n}\n\nvar checkForListedLanguage = function checkForListedLanguage(astGenerator, language) {\n  var langs = astGenerator.listLanguages();\n  return langs.indexOf(language) !== -1;\n};\n\nvar newLineRegex = /\\n/g;\n\nfunction getNewLines(str) {\n  return str.match(newLineRegex);\n}\n\nfunction getAllLineNumbers(_ref) {\n  var lines = _ref.lines,\n      startingLineNumber = _ref.startingLineNumber,\n      style = _ref.style;\n  return lines.map(function (_, i) {\n    var number = i + startingLineNumber;\n    return React__default.createElement(\"span\", {\n      key: \"line-\".concat(i),\n      className: \"react-syntax-highlighter-line-number\",\n      style: typeof style === 'function' ? style(number) : style\n    }, \"\".concat(number, \"\\n\"));\n  });\n}\n\nfunction AllLineNumbers(_ref2) {\n  var codeString = _ref2.codeString,\n      codeStyle = _ref2.codeStyle,\n      _ref2$containerStyle = _ref2.containerStyle,\n      containerStyle = _ref2$containerStyle === void 0 ? {\n    float: 'left',\n    paddingRight: '10px'\n  } : _ref2$containerStyle,\n      _ref2$numberStyle = _ref2.numberStyle,\n      numberStyle = _ref2$numberStyle === void 0 ? {} : _ref2$numberStyle,\n      startingLineNumber = _ref2.startingLineNumber;\n  return React__default.createElement(\"code\", {\n    style: Object.assign({}, codeStyle, containerStyle)\n  }, getAllLineNumbers({\n    lines: codeString.replace(/\\n$/, '').split('\\n'),\n    style: numberStyle,\n    startingLineNumber: startingLineNumber\n  }));\n}\n\nfunction getEmWidthOfNumber(num) {\n  return \"\".concat(num.toString().length, \".25em\");\n}\n\nfunction getInlineLineNumber(lineNumber, inlineLineNumberStyle) {\n  return {\n    type: 'element',\n    tagName: 'span',\n    properties: {\n      key: \"line-number--\".concat(lineNumber),\n      className: ['comment', 'linenumber', 'react-syntax-highlighter-line-number'],\n      style: inlineLineNumberStyle\n    },\n    children: [{\n      type: 'text',\n      value: lineNumber\n    }]\n  };\n}\n\nfunction assembleLineNumberStyles(lineNumberStyle, lineNumber, largestLineNumber) {\n  // minimally necessary styling for line numbers\n  var defaultLineNumberStyle = {\n    display: 'inline-block',\n    minWidth: getEmWidthOfNumber(largestLineNumber),\n    paddingRight: '1em',\n    textAlign: 'right',\n    userSelect: 'none'\n  }; // prep custom styling\n\n  var customLineNumberStyle = typeof lineNumberStyle === 'function' ? lineNumberStyle(lineNumber) : lineNumberStyle; // combine\n\n  var assembledStyle = _objectSpread({}, defaultLineNumberStyle, customLineNumberStyle);\n\n  return assembledStyle;\n}\n\nfunction createLineElement(_ref3) {\n  var children = _ref3.children,\n      lineNumber = _ref3.lineNumber,\n      lineNumberStyle = _ref3.lineNumberStyle,\n      largestLineNumber = _ref3.largestLineNumber,\n      showInlineLineNumbers = _ref3.showInlineLineNumbers,\n      _ref3$lineProps = _ref3.lineProps,\n      lineProps = _ref3$lineProps === void 0 ? {} : _ref3$lineProps,\n      _ref3$className = _ref3.className,\n      className = _ref3$className === void 0 ? [] : _ref3$className,\n      showLineNumbers = _ref3.showLineNumbers,\n      wrapLongLines = _ref3.wrapLongLines;\n  var properties = typeof lineProps === 'function' ? lineProps(lineNumber) : lineProps;\n  properties['className'] = className;\n\n  if (lineNumber && showInlineLineNumbers) {\n    var inlineLineNumberStyle = assembleLineNumberStyles(lineNumberStyle, lineNumber, largestLineNumber);\n    children.unshift(getInlineLineNumber(lineNumber, inlineLineNumberStyle));\n  }\n\n  if (wrapLongLines & showLineNumbers) {\n    properties.style = _objectSpread({}, properties.style, {\n      display: 'flex'\n    });\n  }\n\n  return {\n    type: 'element',\n    tagName: 'span',\n    properties: properties,\n    children: children\n  };\n}\n\nfunction flattenCodeTree(tree) {\n  var className = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var newTree = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n  for (var i = 0; i < tree.length; i++) {\n    var node = tree[i];\n\n    if (node.type === 'text') {\n      newTree.push(createLineElement({\n        children: [node],\n        className: _toConsumableArray(new Set(className))\n      }));\n    } else if (node.children) {\n      var classNames = className.concat(node.properties.className);\n      newTree = newTree.concat(flattenCodeTree(node.children, classNames));\n    }\n  }\n\n  return newTree;\n}\n\nfunction processLines(codeTree, wrapLines, lineProps, showLineNumbers, showInlineLineNumbers, startingLineNumber, largestLineNumber, lineNumberStyle, wrapLongLines) {\n  var _ref4;\n\n  var tree = flattenCodeTree(codeTree.value);\n  var newTree = [];\n  var lastLineBreakIndex = -1;\n  var index = 0;\n\n  function createWrappedLine(children, lineNumber) {\n    var className = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    return createLineElement({\n      children: children,\n      lineNumber: lineNumber,\n      lineNumberStyle: lineNumberStyle,\n      largestLineNumber: largestLineNumber,\n      showInlineLineNumbers: showInlineLineNumbers,\n      lineProps: lineProps,\n      className: className,\n      showLineNumbers: showLineNumbers,\n      wrapLongLines: wrapLongLines\n    });\n  }\n\n  function createUnwrappedLine(children, lineNumber) {\n    if (showLineNumbers && lineNumber && showInlineLineNumbers) {\n      var inlineLineNumberStyle = assembleLineNumberStyles(lineNumberStyle, lineNumber, largestLineNumber);\n      children.unshift(getInlineLineNumber(lineNumber, inlineLineNumberStyle));\n    }\n\n    return children;\n  }\n\n  function createLine(children, lineNumber) {\n    var className = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    return wrapLines || className.length > 0 ? createWrappedLine(children, lineNumber, className) : createUnwrappedLine(children, lineNumber);\n  }\n\n  var _loop = function _loop() {\n    var node = tree[index];\n    var value = node.children[0].value;\n    var newLines = getNewLines(value);\n\n    if (newLines) {\n      var splitValue = value.split('\\n');\n      splitValue.forEach(function (text, i) {\n        var lineNumber = showLineNumbers && newTree.length + startingLineNumber;\n        var newChild = {\n          type: 'text',\n          value: \"\".concat(text, \"\\n\")\n        }; // if it's the first line\n\n        if (i === 0) {\n          var _children = tree.slice(lastLineBreakIndex + 1, index).concat(createLineElement({\n            children: [newChild],\n            className: node.properties.className\n          }));\n\n          var _line = createLine(_children, lineNumber);\n\n          newTree.push(_line); // if it's the last line\n        } else if (i === splitValue.length - 1) {\n          var stringChild = tree[index + 1] && tree[index + 1].children && tree[index + 1].children[0];\n\n          if (stringChild) {\n            var lastLineInPreviousSpan = {\n              type: 'text',\n              value: \"\".concat(text)\n            };\n            var newElem = createLineElement({\n              children: [lastLineInPreviousSpan],\n              className: node.properties.className\n            });\n            tree.splice(index + 1, 0, newElem);\n          } else {\n            var _children2 = [newChild];\n\n            var _line2 = createLine(_children2, lineNumber, node.properties.className);\n\n            newTree.push(_line2);\n          } // if it's neither the first nor the last line\n\n        } else {\n          var _children3 = [newChild];\n\n          var _line3 = createLine(_children3, lineNumber, node.properties.className);\n\n          newTree.push(_line3);\n        }\n      });\n      lastLineBreakIndex = index;\n    }\n\n    index++;\n  };\n\n  while (index < tree.length) {\n    _loop();\n  }\n\n  if (lastLineBreakIndex !== tree.length - 1) {\n    var children = tree.slice(lastLineBreakIndex + 1, tree.length);\n\n    if (children && children.length) {\n      var lineNumber = showLineNumbers && newTree.length + startingLineNumber;\n      var line = createLine(children, lineNumber);\n      newTree.push(line);\n    }\n  }\n\n  return wrapLines ? newTree : (_ref4 = []).concat.apply(_ref4, newTree);\n}\n\nfunction defaultRenderer(_ref5) {\n  var rows = _ref5.rows,\n      stylesheet = _ref5.stylesheet,\n      useInlineStyles = _ref5.useInlineStyles;\n  return rows.map(function (node, i) {\n    return createElement({\n      node: node,\n      stylesheet: stylesheet,\n      useInlineStyles: useInlineStyles,\n      key: \"code-segement\".concat(i)\n    });\n  });\n} // only highlight.js has the highlightAuto method\n\n\nfunction isHighlightJs(astGenerator) {\n  return astGenerator && typeof astGenerator.highlightAuto !== 'undefined';\n}\n\nfunction getCodeTree(_ref6) {\n  var astGenerator = _ref6.astGenerator,\n      language = _ref6.language,\n      code = _ref6.code,\n      defaultCodeValue = _ref6.defaultCodeValue; // figure out whether we're using lowlight/highlight or refractor/prism\n  // then attempt highlighting accordingly\n  // lowlight/highlight?\n\n  if (isHighlightJs(astGenerator)) {\n    var hasLanguage = checkForListedLanguage(astGenerator, language);\n\n    if (language === 'text') {\n      return {\n        value: defaultCodeValue,\n        language: 'text'\n      };\n    } else if (hasLanguage) {\n      return astGenerator.highlight(language, code);\n    } else {\n      return astGenerator.highlightAuto(code);\n    }\n  } // must be refractor/prism, then\n\n\n  try {\n    return language && language !== 'text' ? {\n      value: astGenerator.highlight(code, language)\n    } : {\n      value: defaultCodeValue\n    };\n  } catch (e) {\n    return {\n      value: defaultCodeValue\n    };\n  }\n}\n\nfunction highlight$1(defaultAstGenerator, defaultStyle) {\n  return function SyntaxHighlighter(_ref7) {\n    var language = _ref7.language,\n        children = _ref7.children,\n        _ref7$style = _ref7.style,\n        style = _ref7$style === void 0 ? defaultStyle : _ref7$style,\n        _ref7$customStyle = _ref7.customStyle,\n        customStyle = _ref7$customStyle === void 0 ? {} : _ref7$customStyle,\n        _ref7$codeTagProps = _ref7.codeTagProps,\n        codeTagProps = _ref7$codeTagProps === void 0 ? {\n      className: language ? \"language-\".concat(language) : undefined,\n      style: _objectSpread({}, style['code[class*=\"language-\"]'], style[\"code[class*=\\\"language-\".concat(language, \"\\\"]\")])\n    } : _ref7$codeTagProps,\n        _ref7$useInlineStyles = _ref7.useInlineStyles,\n        useInlineStyles = _ref7$useInlineStyles === void 0 ? true : _ref7$useInlineStyles,\n        _ref7$showLineNumbers = _ref7.showLineNumbers,\n        showLineNumbers = _ref7$showLineNumbers === void 0 ? false : _ref7$showLineNumbers,\n        _ref7$showInlineLineN = _ref7.showInlineLineNumbers,\n        showInlineLineNumbers = _ref7$showInlineLineN === void 0 ? true : _ref7$showInlineLineN,\n        _ref7$startingLineNum = _ref7.startingLineNumber,\n        startingLineNumber = _ref7$startingLineNum === void 0 ? 1 : _ref7$startingLineNum,\n        lineNumberContainerStyle = _ref7.lineNumberContainerStyle,\n        _ref7$lineNumberStyle = _ref7.lineNumberStyle,\n        lineNumberStyle = _ref7$lineNumberStyle === void 0 ? {} : _ref7$lineNumberStyle,\n        wrapLines = _ref7.wrapLines,\n        _ref7$wrapLongLines = _ref7.wrapLongLines,\n        wrapLongLines = _ref7$wrapLongLines === void 0 ? false : _ref7$wrapLongLines,\n        _ref7$lineProps = _ref7.lineProps,\n        lineProps = _ref7$lineProps === void 0 ? {} : _ref7$lineProps,\n        renderer = _ref7.renderer,\n        _ref7$PreTag = _ref7.PreTag,\n        PreTag = _ref7$PreTag === void 0 ? 'pre' : _ref7$PreTag,\n        _ref7$CodeTag = _ref7.CodeTag,\n        CodeTag = _ref7$CodeTag === void 0 ? 'code' : _ref7$CodeTag,\n        _ref7$code = _ref7.code,\n        code = _ref7$code === void 0 ? Array.isArray(children) ? children[0] : children : _ref7$code,\n        astGenerator = _ref7.astGenerator,\n        rest = _objectWithoutProperties(_ref7, [\"language\", \"children\", \"style\", \"customStyle\", \"codeTagProps\", \"useInlineStyles\", \"showLineNumbers\", \"showInlineLineNumbers\", \"startingLineNumber\", \"lineNumberContainerStyle\", \"lineNumberStyle\", \"wrapLines\", \"wrapLongLines\", \"lineProps\", \"renderer\", \"PreTag\", \"CodeTag\", \"code\", \"astGenerator\"]);\n\n    astGenerator = astGenerator || defaultAstGenerator;\n    var allLineNumbers = showLineNumbers ? React__default.createElement(AllLineNumbers, {\n      containerStyle: lineNumberContainerStyle,\n      codeStyle: codeTagProps.style || {},\n      numberStyle: lineNumberStyle,\n      startingLineNumber: startingLineNumber,\n      codeString: code\n    }) : null;\n    var defaultPreStyle = style.hljs || style['pre[class*=\"language-\"]'] || {\n      backgroundColor: '#fff'\n    };\n    var generatorClassName = isHighlightJs(astGenerator) ? 'hljs' : 'prismjs';\n    var preProps = useInlineStyles ? Object.assign({}, rest, {\n      style: Object.assign({}, defaultPreStyle, customStyle)\n    }) : Object.assign({}, rest, {\n      className: rest.className ? \"\".concat(generatorClassName, \" \").concat(rest.className) : generatorClassName,\n      style: Object.assign({}, customStyle)\n    });\n\n    if (!astGenerator) {\n      return React__default.createElement(PreTag, preProps, allLineNumbers, React__default.createElement(CodeTag, codeTagProps, code));\n    }\n    /*\n     * Some custom renderers rely on individual row elements so we need to turn wrapLines on\n     * if renderer is provided and wrapLines is undefined.\n     */\n\n\n    if (wrapLines === undefined && renderer || wrapLongLines) wrapLines = true;\n    renderer = renderer || defaultRenderer;\n    var defaultCodeValue = [{\n      type: 'text',\n      value: code\n    }];\n    var codeTree = getCodeTree({\n      astGenerator: astGenerator,\n      language: language,\n      code: code,\n      defaultCodeValue: defaultCodeValue\n    });\n\n    if (codeTree.language === null) {\n      codeTree.value = defaultCodeValue;\n    } // determine largest line number so that we can force minWidth on all linenumber elements\n\n\n    var largestLineNumber = codeTree.value.length + startingLineNumber;\n    var rows = processLines(codeTree, wrapLines, lineProps, showLineNumbers, showInlineLineNumbers, startingLineNumber, largestLineNumber, lineNumberStyle, wrapLongLines);\n\n    if (wrapLongLines) {\n      codeTagProps.style = _objectSpread({}, codeTagProps.style, {\n        whiteSpace: 'pre-wrap'\n      });\n    } else {\n      codeTagProps.style = _objectSpread({}, codeTagProps.style, {\n        whiteSpace: 'pre'\n      });\n    }\n\n    return React__default.createElement(PreTag, preProps, React__default.createElement(CodeTag, codeTagProps, !showInlineLineNumbers && allLineNumbers, renderer({\n      rows: rows,\n      stylesheet: style,\n      useInlineStyles: useInlineStyles\n    })));\n  };\n}\n\nvar immutable = extend;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n  var target = {};\n\n  for (var i = 0; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n}\n\nvar schema$1 = Schema$2;\nvar proto$1 = Schema$2.prototype;\nproto$1.space = null;\nproto$1.normal = {};\nproto$1.property = {};\n\nfunction Schema$2(property, normal, space) {\n  this.property = property;\n  this.normal = normal;\n\n  if (space) {\n    this.space = space;\n  }\n}\n\nvar xtend = immutable;\nvar Schema$1 = schema$1;\nvar merge_1 = merge$1;\n\nfunction merge$1(definitions) {\n  var length = definitions.length;\n  var property = [];\n  var normal = [];\n  var index = -1;\n  var info;\n  var space;\n\n  while (++index < length) {\n    info = definitions[index];\n    property.push(info.property);\n    normal.push(info.normal);\n    space = info.space;\n  }\n\n  return new Schema$1(xtend.apply(null, property), xtend.apply(null, normal), space);\n}\n\nvar normalize_1 = normalize$3;\n\nfunction normalize$3(value) {\n  return value.toLowerCase();\n}\n\nvar info = Info$2;\nvar proto = Info$2.prototype;\nproto.space = null;\nproto.attribute = null;\nproto.property = null;\nproto.boolean = false;\nproto.booleanish = false;\nproto.overloadedBoolean = false;\nproto.number = false;\nproto.commaSeparated = false;\nproto.spaceSeparated = false;\nproto.commaOrSpaceSeparated = false;\nproto.mustUseProperty = false;\nproto.defined = false;\n\nfunction Info$2(property, attribute) {\n  this.property = property;\n  this.attribute = attribute;\n}\n\nvar types$3 = {};\nvar powers = 0;\ntypes$3.boolean = increment();\ntypes$3.booleanish = increment();\ntypes$3.overloadedBoolean = increment();\ntypes$3.number = increment();\ntypes$3.spaceSeparated = increment();\ntypes$3.commaSeparated = increment();\ntypes$3.commaOrSpaceSeparated = increment();\n\nfunction increment() {\n  return Math.pow(2, ++powers);\n}\n\nvar Info$1 = info;\nvar types$2 = types$3;\nvar definedInfo = DefinedInfo$2;\nDefinedInfo$2.prototype = new Info$1();\nDefinedInfo$2.prototype.defined = true;\nvar checks = ['boolean', 'booleanish', 'overloadedBoolean', 'number', 'commaSeparated', 'spaceSeparated', 'commaOrSpaceSeparated'];\nvar checksLength = checks.length;\n\nfunction DefinedInfo$2(property, attribute, mask, space) {\n  var index = -1;\n  var check;\n  mark(this, 'space', space);\n  Info$1.call(this, property, attribute);\n\n  while (++index < checksLength) {\n    check = checks[index];\n    mark(this, check, (mask & types$2[check]) === types$2[check]);\n  }\n}\n\nfunction mark(values, key, value) {\n  if (value) {\n    values[key] = value;\n  }\n}\n\nvar normalize$2 = normalize_1;\nvar Schema = schema$1;\nvar DefinedInfo$1 = definedInfo;\nvar create_1 = create$5;\n\nfunction create$5(definition) {\n  var space = definition.space;\n  var mustUseProperty = definition.mustUseProperty || [];\n  var attributes = definition.attributes || {};\n  var props = definition.properties;\n  var transform = definition.transform;\n  var property = {};\n  var normal = {};\n  var prop;\n  var info;\n\n  for (prop in props) {\n    info = new DefinedInfo$1(prop, transform(attributes, prop), props[prop], space);\n\n    if (mustUseProperty.indexOf(prop) !== -1) {\n      info.mustUseProperty = true;\n    }\n\n    property[prop] = info;\n    normal[normalize$2(prop)] = prop;\n    normal[normalize$2(info.attribute)] = prop;\n  }\n\n  return new Schema(property, normal, space);\n}\n\nvar create$4 = create_1;\nvar xlink$1 = create$4({\n  space: 'xlink',\n  transform: xlinkTransform,\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n});\n\nfunction xlinkTransform(_, prop) {\n  return 'xlink:' + prop.slice(5).toLowerCase();\n}\n\nvar create$3 = create_1;\nvar xml$1 = create$3({\n  space: 'xml',\n  transform: xmlTransform,\n  properties: {\n    xmlLang: null,\n    xmlBase: null,\n    xmlSpace: null\n  }\n});\n\nfunction xmlTransform(_, prop) {\n  return 'xml:' + prop.slice(3).toLowerCase();\n}\n\nvar caseSensitiveTransform_1 = caseSensitiveTransform$1;\n\nfunction caseSensitiveTransform$1(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute;\n}\n\nvar caseSensitiveTransform = caseSensitiveTransform_1;\nvar caseInsensitiveTransform_1 = caseInsensitiveTransform$2;\n\nfunction caseInsensitiveTransform$2(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase());\n}\n\nvar create$2 = create_1;\nvar caseInsensitiveTransform$1 = caseInsensitiveTransform_1;\nvar xmlns$1 = create$2({\n  space: 'xmlns',\n  attributes: {\n    xmlnsxlink: 'xmlns:xlink'\n  },\n  transform: caseInsensitiveTransform$1,\n  properties: {\n    xmlns: null,\n    xmlnsXLink: null\n  }\n});\nvar types$1 = types$3;\nvar create$1 = create_1;\nvar booleanish$1 = types$1.booleanish;\nvar number$1 = types$1.number;\nvar spaceSeparated$1 = types$1.spaceSeparated;\nvar aria$1 = create$1({\n  transform: ariaTransform,\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish$1,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish$1,\n    ariaChecked: booleanish$1,\n    ariaColCount: number$1,\n    ariaColIndex: number$1,\n    ariaColSpan: number$1,\n    ariaControls: spaceSeparated$1,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated$1,\n    ariaDetails: null,\n    ariaDisabled: booleanish$1,\n    ariaDropEffect: spaceSeparated$1,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish$1,\n    ariaFlowTo: spaceSeparated$1,\n    ariaGrabbed: booleanish$1,\n    ariaHasPopup: null,\n    ariaHidden: booleanish$1,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated$1,\n    ariaLevel: number$1,\n    ariaLive: null,\n    ariaModal: booleanish$1,\n    ariaMultiLine: booleanish$1,\n    ariaMultiSelectable: booleanish$1,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated$1,\n    ariaPlaceholder: null,\n    ariaPosInSet: number$1,\n    ariaPressed: booleanish$1,\n    ariaReadOnly: booleanish$1,\n    ariaRelevant: null,\n    ariaRequired: booleanish$1,\n    ariaRoleDescription: spaceSeparated$1,\n    ariaRowCount: number$1,\n    ariaRowIndex: number$1,\n    ariaRowSpan: number$1,\n    ariaSelected: booleanish$1,\n    ariaSetSize: number$1,\n    ariaSort: null,\n    ariaValueMax: number$1,\n    ariaValueMin: number$1,\n    ariaValueNow: number$1,\n    ariaValueText: null,\n    role: null\n  }\n});\n\nfunction ariaTransform(_, prop) {\n  return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase();\n}\n\nvar types = types$3;\nvar create = create_1;\nvar caseInsensitiveTransform = caseInsensitiveTransform_1;\nvar boolean = types.boolean;\nvar overloadedBoolean = types.overloadedBoolean;\nvar booleanish = types.booleanish;\nvar number = types.number;\nvar spaceSeparated = types.spaceSeparated;\nvar commaSeparated = types.commaSeparated;\nvar html$2 = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: commaSeparated,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextMenu: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: commaSeparated,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null,\n    // Several. Use CSS `text-align` instead,\n    aLink: null,\n    // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated,\n    // `<object>`. List of URIs to archives\n    axis: null,\n    // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null,\n    // `<body>`. Use CSS `background-image` instead\n    bgColor: null,\n    // `<body>` and table elements. Use CSS `background-color` instead\n    border: number,\n    // `<table>`. Use CSS `border-width` instead,\n    borderColor: null,\n    // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number,\n    // `<body>`\n    cellPadding: null,\n    // `<table>`\n    cellSpacing: null,\n    // `<table>`\n    char: null,\n    // Several table elements. When `align=char`, sets the character to align on\n    charOff: null,\n    // Several table elements. When `char`, offsets the alignment\n    classId: null,\n    // `<object>`\n    clear: null,\n    // `<br>`. Use CSS `clear` instead\n    code: null,\n    // `<object>`\n    codeBase: null,\n    // `<object>`\n    codeType: null,\n    // `<object>`\n    color: null,\n    // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean,\n    // Lists. Use CSS to reduce space between items instead\n    declare: boolean,\n    // `<object>`\n    event: null,\n    // `<script>`\n    face: null,\n    // `<font>`. Use CSS instead\n    frame: null,\n    // `<table>`\n    frameBorder: null,\n    // `<iframe>`. Use CSS `border` instead\n    hSpace: number,\n    // `<img>` and `<object>`\n    leftMargin: number,\n    // `<body>`\n    link: null,\n    // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null,\n    // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null,\n    // `<img>`. Use a `<picture>`\n    marginHeight: number,\n    // `<body>`\n    marginWidth: number,\n    // `<body>`\n    noResize: boolean,\n    // `<frame>`\n    noHref: boolean,\n    // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean,\n    // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean,\n    // `<td>` and `<th>`\n    object: null,\n    // `<applet>`\n    profile: null,\n    // `<head>`\n    prompt: null,\n    // `<isindex>`\n    rev: null,\n    // `<link>`\n    rightMargin: number,\n    // `<body>`\n    rules: null,\n    // `<table>`\n    scheme: null,\n    // `<meta>`\n    scrolling: booleanish,\n    // `<frame>`. Use overflow in the child context\n    standby: null,\n    // `<object>`\n    summary: null,\n    // `<table>`\n    text: null,\n    // `<body>`. Use CSS `color` instead\n    topMargin: number,\n    // `<body>`\n    valueType: null,\n    // `<param>`\n    version: null,\n    // `<html>`. Use a doctype.\n    vAlign: null,\n    // Several. Use CSS `vertical-align` instead\n    vLink: null,\n    // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number,\n    // `<img>` and `<object>`\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n});\nvar merge = merge_1;\nvar xlink = xlink$1;\nvar xml = xml$1;\nvar xmlns = xmlns$1;\nvar aria = aria$1;\nvar html$1 = html$2;\nvar html_1$1 = merge([xml, xlink, xmlns, aria, html$1]);\nvar normalize$1 = normalize_1;\nvar DefinedInfo = definedInfo;\nvar Info = info;\nvar data = 'data';\nvar find_1 = find$1;\nvar valid = /^data[-\\w.:]+$/i;\nvar dash = /-[a-z]/g;\nvar cap = /[A-Z]/g;\n\nfunction find$1(schema, value) {\n  var normal = normalize$1(value);\n  var prop = value;\n  var Type = Info;\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]];\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === data && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      prop = datasetToProperty(value);\n    } else {\n      value = datasetToAttribute(value);\n    }\n\n    Type = DefinedInfo;\n  }\n\n  return new Type(prop, value);\n}\n\nfunction datasetToProperty(attribute) {\n  var value = attribute.slice(5).replace(dash, camelcase);\n  return data + value.charAt(0).toUpperCase() + value.slice(1);\n}\n\nfunction datasetToAttribute(property) {\n  var value = property.slice(4);\n\n  if (dash.test(value)) {\n    return property;\n  }\n\n  value = value.replace(cap, kebab);\n\n  if (value.charAt(0) !== '-') {\n    value = '-' + value;\n  }\n\n  return data + value;\n}\n\nfunction kebab($0) {\n  return '-' + $0.toLowerCase();\n}\n\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase();\n}\n\nvar hastUtilParseSelector = parse$3;\nvar search = /[#.]/g; // Create a hast element from a simple CSS selector.\n\nfunction parse$3(selector, defaultTagName) {\n  var value = selector || '';\n  var name = defaultTagName || 'div';\n  var props = {};\n  var start = 0;\n  var subvalue;\n  var previous;\n  var match;\n\n  while (start < value.length) {\n    search.lastIndex = start;\n    match = search.exec(value);\n    subvalue = value.slice(start, match ? match.index : value.length);\n\n    if (subvalue) {\n      if (!previous) {\n        name = subvalue;\n      } else if (previous === '#') {\n        props.id = subvalue;\n      } else if (props.className) {\n        props.className.push(subvalue);\n      } else {\n        props.className = [subvalue];\n      }\n\n      start += subvalue.length;\n    }\n\n    if (match) {\n      previous = match[0];\n      start++;\n    }\n  }\n\n  return {\n    type: 'element',\n    tagName: name,\n    properties: props,\n    children: []\n  };\n}\n\nvar spaceSeparatedTokens = {};\nspaceSeparatedTokens.parse = parse$2;\nspaceSeparatedTokens.stringify = stringify$2;\nvar empty$1 = '';\nvar space$2 = ' ';\nvar whiteSpace = /[ \\t\\n\\r\\f]+/g;\n\nfunction parse$2(value) {\n  var input = String(value || empty$1).trim();\n  return input === empty$1 ? [] : input.split(whiteSpace);\n}\n\nfunction stringify$2(values) {\n  return values.join(space$2).trim();\n}\n\nvar commaSeparatedTokens = {};\ncommaSeparatedTokens.parse = parse$1;\ncommaSeparatedTokens.stringify = stringify$1;\nvar comma = ',';\nvar space$1 = ' ';\nvar empty = ''; // Parse comma-separated tokens to an array.\n\nfunction parse$1(value) {\n  var values = [];\n  var input = String(value || empty);\n  var index = input.indexOf(comma);\n  var lastIndex = 0;\n  var end = false;\n  var val;\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length;\n      end = true;\n    }\n\n    val = input.slice(lastIndex, index).trim();\n\n    if (val || !end) {\n      values.push(val);\n    }\n\n    lastIndex = index + 1;\n    index = input.indexOf(comma, lastIndex);\n  }\n\n  return values;\n} // Compile an array to comma-separated tokens.\n// `options.padLeft` (default: `true`) pads a space left of each token, and\n// `options.padRight` (default: `false`) pads a space to the right of each token.\n\n\nfunction stringify$1(values, options) {\n  var settings = options || {};\n  var left = settings.padLeft === false ? empty : space$1;\n  var right = settings.padRight ? space$1 : empty; // Ensure the last empty entry is seen.\n\n  if (values[values.length - 1] === empty) {\n    values = values.concat(empty);\n  }\n\n  return values.join(right + comma + left).trim();\n}\n\nvar find = find_1;\nvar normalize = normalize_1;\nvar parseSelector = hastUtilParseSelector;\nvar spaces = spaceSeparatedTokens.parse;\nvar commas = commaSeparatedTokens.parse;\nvar factory_1 = factory$1;\nvar own$2 = {}.hasOwnProperty;\n\nfunction factory$1(schema, defaultTagName, caseSensitive) {\n  var adjust = caseSensitive ? createAdjustMap(caseSensitive) : null;\n  return h; // Hyperscript compatible DSL for creating virtual hast trees.\n\n  function h(selector, properties) {\n    var node = parseSelector(selector, defaultTagName);\n    var children = Array.prototype.slice.call(arguments, 2);\n    var name = node.tagName.toLowerCase();\n    var property;\n    node.tagName = adjust && own$2.call(adjust, name) ? adjust[name] : name;\n\n    if (properties && isChildren(properties, node)) {\n      children.unshift(properties);\n      properties = null;\n    }\n\n    if (properties) {\n      for (property in properties) {\n        addProperty(node.properties, property, properties[property]);\n      }\n    }\n\n    addChild(node.children, children);\n\n    if (node.tagName === 'template') {\n      node.content = {\n        type: 'root',\n        children: node.children\n      };\n      node.children = [];\n    }\n\n    return node;\n  }\n\n  function addProperty(properties, key, value) {\n    var info;\n    var property;\n    var result; // Ignore nullish and NaN values.\n\n    if (value === null || value === undefined || value !== value) {\n      return;\n    }\n\n    info = find(schema, key);\n    property = info.property;\n    result = value; // Handle list values.\n\n    if (typeof result === 'string') {\n      if (info.spaceSeparated) {\n        result = spaces(result);\n      } else if (info.commaSeparated) {\n        result = commas(result);\n      } else if (info.commaOrSpaceSeparated) {\n        result = spaces(commas(result).join(' '));\n      }\n    } // Accept `object` on style.\n\n\n    if (property === 'style' && typeof value !== 'string') {\n      result = style(result);\n    } // Class-names (which can be added both on the `selector` and here).\n\n\n    if (property === 'className' && properties.className) {\n      result = properties.className.concat(result);\n    }\n\n    properties[property] = parsePrimitives(info, property, result);\n  }\n}\n\nfunction isChildren(value, node) {\n  return typeof value === 'string' || 'length' in value || isNode(node.tagName, value);\n}\n\nfunction isNode(tagName, value) {\n  var type = value.type;\n\n  if (tagName === 'input' || !type || typeof type !== 'string') {\n    return false;\n  }\n\n  if (_typeof(value.children) === 'object' && 'length' in value.children) {\n    return true;\n  }\n\n  type = type.toLowerCase();\n\n  if (tagName === 'button') {\n    return type !== 'menu' && type !== 'submit' && type !== 'reset' && type !== 'button';\n  }\n\n  return 'value' in value;\n}\n\nfunction addChild(nodes, value) {\n  var index;\n  var length;\n\n  if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({\n      type: 'text',\n      value: String(value)\n    });\n    return;\n  }\n\n  if (_typeof(value) === 'object' && 'length' in value) {\n    index = -1;\n    length = value.length;\n\n    while (++index < length) {\n      addChild(nodes, value[index]);\n    }\n\n    return;\n  }\n\n  if (_typeof(value) !== 'object' || !('type' in value)) {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`');\n  }\n\n  nodes.push(value);\n} // Parse a (list of) primitives.\n\n\nfunction parsePrimitives(info, name, value) {\n  var index;\n  var length;\n  var result;\n\n  if (_typeof(value) !== 'object' || !('length' in value)) {\n    return parsePrimitive(info, name, value);\n  }\n\n  length = value.length;\n  index = -1;\n  result = [];\n\n  while (++index < length) {\n    result[index] = parsePrimitive(info, name, value[index]);\n  }\n\n  return result;\n} // Parse a single primitives.\n\n\nfunction parsePrimitive(info, name, value) {\n  var result = value;\n\n  if (info.number || info.positiveNumber) {\n    if (!isNaN(result) && result !== '') {\n      result = Number(result);\n    }\n  } else if (info.boolean || info.overloadedBoolean) {\n    // Accept `boolean` and `string`.\n    if (typeof result === 'string' && (result === '' || normalize(value) === normalize(name))) {\n      result = true;\n    }\n  }\n\n  return result;\n}\n\nfunction style(value) {\n  var result = [];\n  var key;\n\n  for (key in value) {\n    result.push([key, value[key]].join(': '));\n  }\n\n  return result.join('; ');\n}\n\nfunction createAdjustMap(values) {\n  var length = values.length;\n  var index = -1;\n  var result = {};\n  var value;\n\n  while (++index < length) {\n    value = values[index];\n    result[value.toLowerCase()] = value;\n  }\n\n  return result;\n}\n\nvar schema = html_1$1;\nvar factory = factory_1;\nvar html = factory(schema, 'div');\nhtml.displayName = 'html';\nvar html_1 = html;\nvar hastscript = html_1;\nvar AElig = \"Æ\";\nvar AMP = \"&\";\nvar Aacute = \"Á\";\nvar Acirc = \"Â\";\nvar Agrave = \"À\";\nvar Aring = \"Å\";\nvar Atilde = \"Ã\";\nvar Auml = \"Ä\";\nvar COPY = \"©\";\nvar Ccedil = \"Ç\";\nvar ETH = \"Ð\";\nvar Eacute = \"É\";\nvar Ecirc = \"Ê\";\nvar Egrave = \"È\";\nvar Euml = \"Ë\";\nvar GT = \">\";\nvar Iacute = \"Í\";\nvar Icirc = \"Î\";\nvar Igrave = \"Ì\";\nvar Iuml = \"Ï\";\nvar LT = \"<\";\nvar Ntilde = \"Ñ\";\nvar Oacute = \"Ó\";\nvar Ocirc = \"Ô\";\nvar Ograve = \"Ò\";\nvar Oslash = \"Ø\";\nvar Otilde = \"Õ\";\nvar Ouml = \"Ö\";\nvar QUOT = \"\\\"\";\nvar REG = \"®\";\nvar THORN = \"Þ\";\nvar Uacute = \"Ú\";\nvar Ucirc = \"Û\";\nvar Ugrave = \"Ù\";\nvar Uuml = \"Ü\";\nvar Yacute = \"Ý\";\nvar aacute = \"á\";\nvar acirc = \"â\";\nvar acute = \"´\";\nvar aelig = \"æ\";\nvar agrave = \"à\";\nvar amp = \"&\";\nvar aring = \"å\";\nvar atilde = \"ã\";\nvar auml = \"ä\";\nvar brvbar = \"¦\";\nvar ccedil = \"ç\";\nvar cedil = \"¸\";\nvar cent = \"¢\";\nvar copy = \"©\";\nvar curren = \"¤\";\nvar deg = \"°\";\nvar divide = \"÷\";\nvar eacute = \"é\";\nvar ecirc = \"ê\";\nvar egrave = \"è\";\nvar eth = \"ð\";\nvar euml = \"ë\";\nvar frac12 = \"½\";\nvar frac14 = \"¼\";\nvar frac34 = \"¾\";\nvar gt = \">\";\nvar iacute = \"í\";\nvar icirc = \"î\";\nvar iexcl = \"¡\";\nvar igrave = \"ì\";\nvar iquest = \"¿\";\nvar iuml = \"ï\";\nvar laquo = \"«\";\nvar lt = \"<\";\nvar macr = \"¯\";\nvar micro = \"µ\";\nvar middot = \"·\";\nvar nbsp = \" \";\nvar not = \"¬\";\nvar ntilde = \"ñ\";\nvar oacute = \"ó\";\nvar ocirc = \"ô\";\nvar ograve = \"ò\";\nvar ordf = \"ª\";\nvar ordm = \"º\";\nvar oslash = \"ø\";\nvar otilde = \"õ\";\nvar ouml = \"ö\";\nvar para = \"¶\";\nvar plusmn = \"±\";\nvar pound = \"£\";\nvar quot = \"\\\"\";\nvar raquo = \"»\";\nvar reg = \"®\";\nvar sect = \"§\";\nvar shy = \"­\";\nvar sup1 = \"¹\";\nvar sup2 = \"²\";\nvar sup3 = \"³\";\nvar szlig = \"ß\";\nvar thorn = \"þ\";\nvar times = \"×\";\nvar uacute = \"ú\";\nvar ucirc = \"û\";\nvar ugrave = \"ù\";\nvar uml = \"¨\";\nvar uuml = \"ü\";\nvar yacute = \"ý\";\nvar yen = \"¥\";\nvar yuml = \"ÿ\";\nvar require$$0 = {\n  AElig: AElig,\n  AMP: AMP,\n  Aacute: Aacute,\n  Acirc: Acirc,\n  Agrave: Agrave,\n  Aring: Aring,\n  Atilde: Atilde,\n  Auml: Auml,\n  COPY: COPY,\n  Ccedil: Ccedil,\n  ETH: ETH,\n  Eacute: Eacute,\n  Ecirc: Ecirc,\n  Egrave: Egrave,\n  Euml: Euml,\n  GT: GT,\n  Iacute: Iacute,\n  Icirc: Icirc,\n  Igrave: Igrave,\n  Iuml: Iuml,\n  LT: LT,\n  Ntilde: Ntilde,\n  Oacute: Oacute,\n  Ocirc: Ocirc,\n  Ograve: Ograve,\n  Oslash: Oslash,\n  Otilde: Otilde,\n  Ouml: Ouml,\n  QUOT: QUOT,\n  REG: REG,\n  THORN: THORN,\n  Uacute: Uacute,\n  Ucirc: Ucirc,\n  Ugrave: Ugrave,\n  Uuml: Uuml,\n  Yacute: Yacute,\n  aacute: aacute,\n  acirc: acirc,\n  acute: acute,\n  aelig: aelig,\n  agrave: agrave,\n  amp: amp,\n  aring: aring,\n  atilde: atilde,\n  auml: auml,\n  brvbar: brvbar,\n  ccedil: ccedil,\n  cedil: cedil,\n  cent: cent,\n  copy: copy,\n  curren: curren,\n  deg: deg,\n  divide: divide,\n  eacute: eacute,\n  ecirc: ecirc,\n  egrave: egrave,\n  eth: eth,\n  euml: euml,\n  frac12: frac12,\n  frac14: frac14,\n  frac34: frac34,\n  gt: gt,\n  iacute: iacute,\n  icirc: icirc,\n  iexcl: iexcl,\n  igrave: igrave,\n  iquest: iquest,\n  iuml: iuml,\n  laquo: laquo,\n  lt: lt,\n  macr: macr,\n  micro: micro,\n  middot: middot,\n  nbsp: nbsp,\n  not: not,\n  ntilde: ntilde,\n  oacute: oacute,\n  ocirc: ocirc,\n  ograve: ograve,\n  ordf: ordf,\n  ordm: ordm,\n  oslash: oslash,\n  otilde: otilde,\n  ouml: ouml,\n  para: para,\n  plusmn: plusmn,\n  pound: pound,\n  quot: quot,\n  raquo: raquo,\n  reg: reg,\n  sect: sect,\n  shy: shy,\n  sup1: sup1,\n  sup2: sup2,\n  sup3: sup3,\n  szlig: szlig,\n  thorn: thorn,\n  times: times,\n  uacute: uacute,\n  ucirc: ucirc,\n  ugrave: ugrave,\n  uml: uml,\n  uuml: uuml,\n  yacute: yacute,\n  yen: yen,\n  yuml: yuml\n};\nvar require$$1 = {\n  \"0\": \"�\",\n  \"128\": \"€\",\n  \"130\": \"‚\",\n  \"131\": \"ƒ\",\n  \"132\": \"„\",\n  \"133\": \"…\",\n  \"134\": \"†\",\n  \"135\": \"‡\",\n  \"136\": \"ˆ\",\n  \"137\": \"‰\",\n  \"138\": \"Š\",\n  \"139\": \"‹\",\n  \"140\": \"Œ\",\n  \"142\": \"Ž\",\n  \"145\": \"‘\",\n  \"146\": \"’\",\n  \"147\": \"“\",\n  \"148\": \"”\",\n  \"149\": \"•\",\n  \"150\": \"–\",\n  \"151\": \"—\",\n  \"152\": \"˜\",\n  \"153\": \"™\",\n  \"154\": \"š\",\n  \"155\": \"›\",\n  \"156\": \"œ\",\n  \"158\": \"ž\",\n  \"159\": \"Ÿ\"\n};\nvar isDecimal = decimal$2; // Check if the given character code, or the character code at the first\n// character, is decimal.\n\nfunction decimal$2(character) {\n  var code = typeof character === 'string' ? character.charCodeAt(0) : character;\n  return code >= 48 && code <= 57;\n  /* 0-9 */\n}\n\nvar isHexadecimal = hexadecimal$1; // Check if the given character code, or the character code at the first\n// character, is hexadecimal.\n\nfunction hexadecimal$1(character) {\n  var code = typeof character === 'string' ? character.charCodeAt(0) : character;\n  return code >= 97\n  /* a */\n  && code <= 102\n  /* z */\n  || code >= 65\n  /* A */\n  && code <= 70\n  /* Z */\n  || code >= 48\n  /* A */\n  && code <= 57\n  /* Z */\n  ;\n}\n\nvar isAlphabetical = alphabetical$1; // Check if the given character code, or the character code at the first\n// character, is alphabetical.\n\nfunction alphabetical$1(character) {\n  var code = typeof character === 'string' ? character.charCodeAt(0) : character;\n  return code >= 97 && code <= 122\n  /* a-z */\n  || code >= 65 && code <= 90\n  /* A-Z */\n  ;\n}\n\nvar alphabetical = isAlphabetical;\nvar decimal$1 = isDecimal;\nvar isAlphanumerical = alphanumerical$1; // Check if the given character code, or the character code at the first\n// character, is alphanumerical.\n\nfunction alphanumerical$1(character) {\n  return alphabetical(character) || decimal$1(character);\n}\n/* eslint-env browser */\n\n\nvar el;\nvar semicolon$1 = 59; //  ';'\n\nvar decodeEntity_browser = decodeEntity$1;\n\nfunction decodeEntity$1(characters) {\n  var entity = '&' + characters + ';';\n  var char;\n  el = el || document.createElement('i');\n  el.innerHTML = entity;\n  char = el.textContent; // Some entities do not require the closing semicolon (`&not` - for instance),\n  // which leads to situations where parsing the assumed entity of &notit; will\n  // result in the string `¬it;`.  When we encounter a trailing semicolon after\n  // parsing and the entity to decode was not a semicolon (`&semi;`), we can\n  // assume that the matching was incomplete\n\n  if (char.charCodeAt(char.length - 1) === semicolon$1 && characters !== 'semi') {\n    return false;\n  } // If the decoded string is equal to the input, the entity was not valid\n\n\n  return char === entity ? false : char;\n}\n\nvar legacy = require$$0;\nvar invalid = require$$1;\nvar decimal = isDecimal;\nvar hexadecimal = isHexadecimal;\nvar alphanumerical = isAlphanumerical;\nvar decodeEntity = decodeEntity_browser;\nvar parseEntities_1 = parseEntities;\nvar own$1 = {}.hasOwnProperty;\nvar fromCharCode = String.fromCharCode;\nvar noop = Function.prototype; // Default settings.\n\nvar defaults = {\n  warning: null,\n  reference: null,\n  text: null,\n  warningContext: null,\n  referenceContext: null,\n  textContext: null,\n  position: {},\n  additional: null,\n  attribute: false,\n  nonTerminated: true\n}; // Characters.\n\nvar tab = 9; // '\\t'\n\nvar lineFeed = 10; // '\\n'\n\nvar formFeed = 12; // '\\f'\n\nvar space = 32; // ' '\n\nvar ampersand = 38; // '&'\n\nvar semicolon = 59; // ';'\n\nvar lessThan = 60; // '<'\n\nvar equalsTo = 61; // '='\n\nvar numberSign = 35; // '#'\n\nvar uppercaseX = 88; // 'X'\n\nvar lowercaseX = 120; // 'x'\n\nvar replacementCharacter = 65533; // '�'\n// Reference types.\n\nvar name = 'named';\nvar hexa = 'hexadecimal';\nvar deci = 'decimal'; // Map of bases.\n\nvar bases = {};\nbases[hexa] = 16;\nbases[deci] = 10; // Map of types to tests.\n// Each type of character reference accepts different characters.\n// This test is used to detect whether a reference has ended (as the semicolon\n// is not strictly needed).\n\nvar tests = {};\ntests[name] = alphanumerical;\ntests[deci] = decimal;\ntests[hexa] = hexadecimal; // Warning types.\n\nvar namedNotTerminated = 1;\nvar numericNotTerminated = 2;\nvar namedEmpty = 3;\nvar numericEmpty = 4;\nvar namedUnknown = 5;\nvar numericDisallowed = 6;\nvar numericProhibited = 7; // Warning messages.\n\nvar messages = {};\nmessages[namedNotTerminated] = 'Named character references must be terminated by a semicolon';\nmessages[numericNotTerminated] = 'Numeric character references must be terminated by a semicolon';\nmessages[namedEmpty] = 'Named character references cannot be empty';\nmessages[numericEmpty] = 'Numeric character references cannot be empty';\nmessages[namedUnknown] = 'Named character references must be known';\nmessages[numericDisallowed] = 'Numeric character references cannot be disallowed';\nmessages[numericProhibited] = 'Numeric character references cannot be outside the permissible Unicode range'; // Wrap to ensure clean parameters are given to `parse`.\n\nfunction parseEntities(value, options) {\n  var settings = {};\n  var option;\n  var key;\n\n  if (!options) {\n    options = {};\n  }\n\n  for (key in defaults) {\n    option = options[key];\n    settings[key] = option === null || option === undefined ? defaults[key] : option;\n  }\n\n  if (settings.position.indent || settings.position.start) {\n    settings.indent = settings.position.indent || [];\n    settings.position = settings.position.start;\n  }\n\n  return parse(value, settings);\n} // Parse entities.\n// eslint-disable-next-line complexity\n\n\nfunction parse(value, settings) {\n  var additional = settings.additional;\n  var nonTerminated = settings.nonTerminated;\n  var handleText = settings.text;\n  var handleReference = settings.reference;\n  var handleWarning = settings.warning;\n  var textContext = settings.textContext;\n  var referenceContext = settings.referenceContext;\n  var warningContext = settings.warningContext;\n  var pos = settings.position;\n  var indent = settings.indent || [];\n  var length = value.length;\n  var index = 0;\n  var lines = -1;\n  var column = pos.column || 1;\n  var line = pos.line || 1;\n  var queue = '';\n  var result = [];\n  var entityCharacters;\n  var namedEntity;\n  var terminated;\n  var characters;\n  var character;\n  var reference;\n  var following;\n  var warning;\n  var reason;\n  var output;\n  var entity;\n  var begin;\n  var start;\n  var type;\n  var test;\n  var prev;\n  var next;\n  var diff;\n  var end;\n\n  if (typeof additional === 'string') {\n    additional = additional.charCodeAt(0);\n  } // Cache the current point.\n\n\n  prev = now(); // Wrap `handleWarning`.\n\n  warning = handleWarning ? parseError : noop; // Ensure the algorithm walks over the first character and the end\n  // (inclusive).\n\n  index--;\n  length++;\n\n  while (++index < length) {\n    // If the previous character was a newline.\n    if (character === lineFeed) {\n      column = indent[lines] || 1;\n    }\n\n    character = value.charCodeAt(index);\n\n    if (character === ampersand) {\n      following = value.charCodeAt(index + 1); // The behaviour depends on the identity of the next character.\n\n      if (following === tab || following === lineFeed || following === formFeed || following === space || following === ampersand || following === lessThan || following !== following || additional && following === additional) {\n        // Not a character reference.\n        // No characters are consumed, and nothing is returned.\n        // This is not an error, either.\n        queue += fromCharCode(character);\n        column++;\n        continue;\n      }\n\n      start = index + 1;\n      begin = start;\n      end = start;\n\n      if (following === numberSign) {\n        // Numerical entity.\n        end = ++begin; // The behaviour further depends on the next character.\n\n        following = value.charCodeAt(end);\n\n        if (following === uppercaseX || following === lowercaseX) {\n          // ASCII hex digits.\n          type = hexa;\n          end = ++begin;\n        } else {\n          // ASCII digits.\n          type = deci;\n        }\n      } else {\n        // Named entity.\n        type = name;\n      }\n\n      entityCharacters = '';\n      entity = '';\n      characters = '';\n      test = tests[type];\n      end--;\n\n      while (++end < length) {\n        following = value.charCodeAt(end);\n\n        if (!test(following)) {\n          break;\n        }\n\n        characters += fromCharCode(following); // Check if we can match a legacy named reference.\n        // If so, we cache that as the last viable named reference.\n        // This ensures we do not need to walk backwards later.\n\n        if (type === name && own$1.call(legacy, characters)) {\n          entityCharacters = characters;\n          entity = legacy[characters];\n        }\n      }\n\n      terminated = value.charCodeAt(end) === semicolon;\n\n      if (terminated) {\n        end++;\n        namedEntity = type === name ? decodeEntity(characters) : false;\n\n        if (namedEntity) {\n          entityCharacters = characters;\n          entity = namedEntity;\n        }\n      }\n\n      diff = 1 + end - start;\n      if (!terminated && !nonTerminated) ;else if (!characters) {\n        // An empty (possible) entity is valid, unless it’s numeric (thus an\n        // ampersand followed by an octothorp).\n        if (type !== name) {\n          warning(numericEmpty, diff);\n        }\n      } else if (type === name) {\n        // An ampersand followed by anything unknown, and not terminated, is\n        // invalid.\n        if (terminated && !entity) {\n          warning(namedUnknown, 1);\n        } else {\n          // If theres something after an entity name which is not known, cap\n          // the reference.\n          if (entityCharacters !== characters) {\n            end = begin + entityCharacters.length;\n            diff = 1 + end - begin;\n            terminated = false;\n          } // If the reference is not terminated, warn.\n\n\n          if (!terminated) {\n            reason = entityCharacters ? namedNotTerminated : namedEmpty;\n\n            if (settings.attribute) {\n              following = value.charCodeAt(end);\n\n              if (following === equalsTo) {\n                warning(reason, diff);\n                entity = null;\n              } else if (alphanumerical(following)) {\n                entity = null;\n              } else {\n                warning(reason, diff);\n              }\n            } else {\n              warning(reason, diff);\n            }\n          }\n        }\n\n        reference = entity;\n      } else {\n        if (!terminated) {\n          // All non-terminated numeric entities are not rendered, and trigger a\n          // warning.\n          warning(numericNotTerminated, diff);\n        } // When terminated and number, parse as either hexadecimal or decimal.\n\n\n        reference = parseInt(characters, bases[type]); // Trigger a warning when the parsed number is prohibited, and replace\n        // with replacement character.\n\n        if (prohibited(reference)) {\n          warning(numericProhibited, diff);\n          reference = fromCharCode(replacementCharacter);\n        } else if (reference in invalid) {\n          // Trigger a warning when the parsed number is disallowed, and replace\n          // by an alternative.\n          warning(numericDisallowed, diff);\n          reference = invalid[reference];\n        } else {\n          // Parse the number.\n          output = ''; // Trigger a warning when the parsed number should not be used.\n\n          if (disallowed(reference)) {\n            warning(numericDisallowed, diff);\n          } // Stringify the number.\n\n\n          if (reference > 0xffff) {\n            reference -= 0x10000;\n            output += fromCharCode(reference >>> (10 & 0x3ff) | 0xd800);\n            reference = 0xdc00 | reference & 0x3ff;\n          }\n\n          reference = output + fromCharCode(reference);\n        }\n      } // Found it!\n      // First eat the queued characters as normal text, then eat an entity.\n\n      if (reference) {\n        flush();\n        prev = now();\n        index = end - 1;\n        column += end - start + 1;\n        result.push(reference);\n        next = now();\n        next.offset++;\n\n        if (handleReference) {\n          handleReference.call(referenceContext, reference, {\n            start: prev,\n            end: next\n          }, value.slice(start - 1, end));\n        }\n\n        prev = next;\n      } else {\n        // If we could not find a reference, queue the checked characters (as\n        // normal characters), and move the pointer to their end.\n        // This is possible because we can be certain neither newlines nor\n        // ampersands are included.\n        characters = value.slice(start - 1, end);\n        queue += characters;\n        column += characters.length;\n        index = end - 1;\n      }\n    } else {\n      // Handle anything other than an ampersand, including newlines and EOF.\n      if (character === 10 // Line feed\n      ) {\n        line++;\n        lines++;\n        column = 0;\n      }\n\n      if (character === character) {\n        queue += fromCharCode(character);\n        column++;\n      } else {\n        flush();\n      }\n    }\n  } // Return the reduced nodes.\n\n\n  return result.join(''); // Get current position.\n\n  function now() {\n    return {\n      line: line,\n      column: column,\n      offset: index + (pos.offset || 0)\n    };\n  } // “Throw” a parse-error: a warning.\n\n\n  function parseError(code, offset) {\n    var position = now();\n    position.column += offset;\n    position.offset += offset;\n    handleWarning.call(warningContext, messages[code], position, code);\n  } // Flush `queue` (normal text).\n  // Macro invoked before each entity and at the end of `value`.\n  // Does nothing when `queue` is empty.\n\n\n  function flush() {\n    if (queue) {\n      result.push(queue);\n\n      if (handleText) {\n        handleText.call(textContext, queue, {\n          start: prev,\n          end: now()\n        });\n      }\n\n      queue = '';\n    }\n  }\n} // Check if `character` is outside the permissible unicode range.\n\n\nfunction prohibited(code) {\n  return code >= 0xd800 && code <= 0xdfff || code > 0x10ffff;\n} // Check if `character` is disallowed.\n\n\nfunction disallowed(code) {\n  return code >= 0x0001 && code <= 0x0008 || code === 0x000b || code >= 0x000d && code <= 0x001f || code >= 0x007f && code <= 0x009f || code >= 0xfdd0 && code <= 0xfdef || (code & 0xffff) === 0xffff || (code & 0xffff) === 0xfffe;\n}\n\nvar prismCore = {\n  exports: {}\n};\n\n(function (module) {\n  /// <reference lib=\"WebWorker\"/>\n  var _self = typeof window !== 'undefined' ? window // if in browser\n  : typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope ? self // if in worker\n  : {} // if in node js\n  ;\n  /**\n   * Prism: Lightweight, robust, elegant syntax highlighting\n   *\n   * @license MIT <https://opensource.org/licenses/MIT>\n   * @author Lea Verou <https://lea.verou.me>\n   * @namespace\n   * @public\n   */\n\n\n  var Prism = function (_self) {\n    // Private helper vars\n    var lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n    var uniqueId = 0; // The grammar object for plaintext\n\n    var plainTextGrammar = {};\n    var _ = {\n      /**\n       * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n       * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n       * additional languages or plugins yourself.\n       *\n       * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n       *\n       * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n       * empty Prism object into the global scope before loading the Prism script like this:\n       *\n       * ```js\n       * window.Prism = window.Prism || {};\n       * Prism.manual = true;\n       * // add a new <script> to load Prism's script\n       * ```\n       *\n       * @default false\n       * @type {boolean}\n       * @memberof Prism\n       * @public\n       */\n      manual: _self.Prism && _self.Prism.manual,\n      disableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n      /**\n       * A namespace for utility methods.\n       *\n       * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n       * change or disappear at any time.\n       *\n       * @namespace\n       * @memberof Prism\n       */\n      util: {\n        encode: function encode(tokens) {\n          if (tokens instanceof Token) {\n            return new Token(tokens.type, encode(tokens.content), tokens.alias);\n          } else if (Array.isArray(tokens)) {\n            return tokens.map(encode);\n          } else {\n            return tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n          }\n        },\n\n        /**\n         * Returns the name of the type of the given value.\n         *\n         * @param {any} o\n         * @returns {string}\n         * @example\n         * type(null)      === 'Null'\n         * type(undefined) === 'Undefined'\n         * type(123)       === 'Number'\n         * type('foo')     === 'String'\n         * type(true)      === 'Boolean'\n         * type([1, 2])    === 'Array'\n         * type({})        === 'Object'\n         * type(String)    === 'Function'\n         * type(/abc+/)    === 'RegExp'\n         */\n        type: function type(o) {\n          return Object.prototype.toString.call(o).slice(8, -1);\n        },\n\n        /**\n         * Returns a unique number for the given object. Later calls will still return the same number.\n         *\n         * @param {Object} obj\n         * @returns {number}\n         */\n        objId: function objId(obj) {\n          if (!obj['__id']) {\n            Object.defineProperty(obj, '__id', {\n              value: ++uniqueId\n            });\n          }\n\n          return obj['__id'];\n        },\n\n        /**\n         * Creates a deep clone of the given object.\n         *\n         * The main intended use of this function is to clone language definitions.\n         *\n         * @param {T} o\n         * @param {Record<number, any>} [visited]\n         * @returns {T}\n         * @template T\n         */\n        clone: function deepClone(o, visited) {\n          visited = visited || {};\n          var clone;\n          var id;\n\n          switch (_.util.type(o)) {\n            case 'Object':\n              id = _.util.objId(o);\n\n              if (visited[id]) {\n                return visited[id];\n              }\n\n              clone =\n              /** @type {Record<string, any>} */\n              {};\n              visited[id] = clone;\n\n              for (var key in o) {\n                if (o.hasOwnProperty(key)) {\n                  clone[key] = deepClone(o[key], visited);\n                }\n              }\n\n              return (\n                /** @type {any} */\n                clone\n              );\n\n            case 'Array':\n              id = _.util.objId(o);\n\n              if (visited[id]) {\n                return visited[id];\n              }\n\n              clone = [];\n              visited[id] = clone;\n              /** @type {Array} */\n\n              /** @type {any} */\n\n              o.forEach(function (v, i) {\n                clone[i] = deepClone(v, visited);\n              });\n              return (\n                /** @type {any} */\n                clone\n              );\n\n            default:\n              return o;\n          }\n        },\n\n        /**\n         * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n         *\n         * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n         *\n         * @param {Element} element\n         * @returns {string}\n         */\n        getLanguage: function getLanguage(element) {\n          while (element && !lang.test(element.className)) {\n            element = element.parentElement;\n          }\n\n          if (element) {\n            return (element.className.match(lang) || [, 'none'])[1].toLowerCase();\n          }\n\n          return 'none';\n        },\n\n        /**\n         * Returns the script element that is currently executing.\n         *\n         * This does __not__ work for line script element.\n         *\n         * @returns {HTMLScriptElement | null}\n         */\n        currentScript: function currentScript() {\n          if (typeof document === 'undefined') {\n            return null;\n          }\n\n          if ('currentScript' in document && 1 < 2\n          /* hack to trip TS' flow analysis */\n          ) {\n            return (\n              /** @type {any} */\n              document.currentScript\n            );\n          } // IE11 workaround\n          // we'll get the src of the current script by parsing IE11's error stack trace\n          // this will not work for inline scripts\n\n\n          try {\n            throw new Error();\n          } catch (err) {\n            // Get file src url from stack. Specifically works with the format of stack traces in IE.\n            // A stack will look like this:\n            //\n            // Error\n            //    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n            //    at Global code (http://localhost/components/prism-core.js:606:1)\n            var src = (/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(err.stack) || [])[1];\n\n            if (src) {\n              var scripts = document.getElementsByTagName('script');\n\n              for (var i in scripts) {\n                if (scripts[i].src == src) {\n                  return scripts[i];\n                }\n              }\n            }\n\n            return null;\n          }\n        },\n\n        /**\n         * Returns whether a given class is active for `element`.\n         *\n         * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n         * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n         * given class is just the given class with a `no-` prefix.\n         *\n         * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n         * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n         * ancestors have the given class or the negated version of it, then the default activation will be returned.\n         *\n         * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n         * version of it, the class is considered active.\n         *\n         * @param {Element} element\n         * @param {string} className\n         * @param {boolean} [defaultActivation=false]\n         * @returns {boolean}\n         */\n        isActive: function isActive(element, className, defaultActivation) {\n          var no = 'no-' + className;\n\n          while (element) {\n            var classList = element.classList;\n\n            if (classList.contains(className)) {\n              return true;\n            }\n\n            if (classList.contains(no)) {\n              return false;\n            }\n\n            element = element.parentElement;\n          }\n\n          return !!defaultActivation;\n        }\n      },\n\n      /**\n       * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n       *\n       * @namespace\n       * @memberof Prism\n       * @public\n       */\n      languages: {\n        /**\n         * The grammar for plain, unformatted text.\n         */\n        plain: plainTextGrammar,\n        plaintext: plainTextGrammar,\n        text: plainTextGrammar,\n        txt: plainTextGrammar,\n\n        /**\n         * Creates a deep copy of the language with the given id and appends the given tokens.\n         *\n         * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n         * will be overwritten at its original position.\n         *\n         * ## Best practices\n         *\n         * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n         * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n         * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n         *\n         * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n         * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n         *\n         * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n         * @param {Grammar} redef The new tokens to append.\n         * @returns {Grammar} The new language created.\n         * @public\n         * @example\n         * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n         *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n         *     // at its original position\n         *     'comment': { ... },\n         *     // CSS doesn't have a 'color' token, so this token will be appended\n         *     'color': /\\b(?:red|green|blue)\\b/\n         * });\n         */\n        extend: function extend(id, redef) {\n          var lang = _.util.clone(_.languages[id]);\n\n          for (var key in redef) {\n            lang[key] = redef[key];\n          }\n\n          return lang;\n        },\n\n        /**\n         * Inserts tokens _before_ another token in a language definition or any other grammar.\n         *\n         * ## Usage\n         *\n         * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n         * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n         * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n         * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n         * this:\n         *\n         * ```js\n         * Prism.languages.markup.style = {\n         *     // token\n         * };\n         * ```\n         *\n         * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n         * before existing tokens. For the CSS example above, you would use it like this:\n         *\n         * ```js\n         * Prism.languages.insertBefore('markup', 'cdata', {\n         *     'style': {\n         *         // token\n         *     }\n         * });\n         * ```\n         *\n         * ## Special cases\n         *\n         * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n         * will be ignored.\n         *\n         * This behavior can be used to insert tokens after `before`:\n         *\n         * ```js\n         * Prism.languages.insertBefore('markup', 'comment', {\n         *     'comment': Prism.languages.markup.comment,\n         *     // tokens after 'comment'\n         * });\n         * ```\n         *\n         * ## Limitations\n         *\n         * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n         * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n         * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n         * deleting properties which is necessary to insert at arbitrary positions.\n         *\n         * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n         * Instead, it will create a new object and replace all references to the target object with the new one. This\n         * can be done without temporarily deleting properties, so the iteration order is well-defined.\n         *\n         * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n         * you hold the target object in a variable, then the value of the variable will not change.\n         *\n         * ```js\n         * var oldMarkup = Prism.languages.markup;\n         * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n         *\n         * assert(oldMarkup !== Prism.languages.markup);\n         * assert(newMarkup === Prism.languages.markup);\n         * ```\n         *\n         * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n         * object to be modified.\n         * @param {string} before The key to insert before.\n         * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n         * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n         * object to be modified.\n         *\n         * Defaults to `Prism.languages`.\n         * @returns {Grammar} The new grammar object.\n         * @public\n         */\n        insertBefore: function insertBefore(inside, before, insert, root) {\n          root = root ||\n          /** @type {any} */\n          _.languages;\n          var grammar = root[inside];\n          /** @type {Grammar} */\n\n          var ret = {};\n\n          for (var token in grammar) {\n            if (grammar.hasOwnProperty(token)) {\n              if (token == before) {\n                for (var newToken in insert) {\n                  if (insert.hasOwnProperty(newToken)) {\n                    ret[newToken] = insert[newToken];\n                  }\n                }\n              } // Do not insert token which also occur in insert. See #1525\n\n\n              if (!insert.hasOwnProperty(token)) {\n                ret[token] = grammar[token];\n              }\n            }\n          }\n\n          var old = root[inside];\n          root[inside] = ret; // Update references in other language definitions\n\n          _.languages.DFS(_.languages, function (key, value) {\n            if (value === old && key != inside) {\n              this[key] = ret;\n            }\n          });\n\n          return ret;\n        },\n        // Traverse a language definition with Depth First Search\n        DFS: function DFS(o, callback, type, visited) {\n          visited = visited || {};\n          var objId = _.util.objId;\n\n          for (var i in o) {\n            if (o.hasOwnProperty(i)) {\n              callback.call(o, i, o[i], type || i);\n              var property = o[i];\n\n              var propertyType = _.util.type(property);\n\n              if (propertyType === 'Object' && !visited[objId(property)]) {\n                visited[objId(property)] = true;\n                DFS(property, callback, null, visited);\n              } else if (propertyType === 'Array' && !visited[objId(property)]) {\n                visited[objId(property)] = true;\n                DFS(property, callback, i, visited);\n              }\n            }\n          }\n        }\n      },\n      plugins: {},\n\n      /**\n       * This is the most high-level function in Prism’s API.\n       * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n       * each one of them.\n       *\n       * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n       *\n       * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n       * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n       * @memberof Prism\n       * @public\n       */\n      highlightAll: function highlightAll(async, callback) {\n        _.highlightAllUnder(document, async, callback);\n      },\n\n      /**\n       * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n       * {@link Prism.highlightElement} on each one of them.\n       *\n       * The following hooks will be run:\n       * 1. `before-highlightall`\n       * 2. `before-all-elements-highlight`\n       * 3. All hooks of {@link Prism.highlightElement} for each element.\n       *\n       * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n       * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n       * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n       * @memberof Prism\n       * @public\n       */\n      highlightAllUnder: function highlightAllUnder(container, async, callback) {\n        var env = {\n          callback: callback,\n          container: container,\n          selector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n        };\n\n        _.hooks.run('before-highlightall', env);\n\n        env.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n        _.hooks.run('before-all-elements-highlight', env);\n\n        for (var i = 0, element; element = env.elements[i++];) {\n          _.highlightElement(element, async === true, env.callback);\n        }\n      },\n\n      /**\n       * Highlights the code inside a single element.\n       *\n       * The following hooks will be run:\n       * 1. `before-sanity-check`\n       * 2. `before-highlight`\n       * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n       * 4. `before-insert`\n       * 5. `after-highlight`\n       * 6. `complete`\n       *\n       * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n       * the element's language.\n       *\n       * @param {Element} element The element containing the code.\n       * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n       * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n       * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n       * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n       *\n       * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n       * asynchronous highlighting to work. You can build your own bundle on the\n       * [Download page](https://prismjs.com/download.html).\n       * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n       * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n       * @memberof Prism\n       * @public\n       */\n      highlightElement: function highlightElement(element, async, callback) {\n        // Find language\n        var language = _.util.getLanguage(element);\n\n        var grammar = _.languages[language]; // Set language on the element, if not present\n\n        element.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language; // Set language on the parent, for styling\n\n        var parent = element.parentElement;\n\n        if (parent && parent.nodeName.toLowerCase() === 'pre') {\n          parent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n        }\n\n        var code = element.textContent;\n        var env = {\n          element: element,\n          language: language,\n          grammar: grammar,\n          code: code\n        };\n\n        function insertHighlightedCode(highlightedCode) {\n          env.highlightedCode = highlightedCode;\n\n          _.hooks.run('before-insert', env);\n\n          env.element.innerHTML = env.highlightedCode;\n\n          _.hooks.run('after-highlight', env);\n\n          _.hooks.run('complete', env);\n\n          callback && callback.call(env.element);\n        }\n\n        _.hooks.run('before-sanity-check', env); // plugins may change/add the parent/element\n\n\n        parent = env.element.parentElement;\n\n        if (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n          parent.setAttribute('tabindex', '0');\n        }\n\n        if (!env.code) {\n          _.hooks.run('complete', env);\n\n          callback && callback.call(env.element);\n          return;\n        }\n\n        _.hooks.run('before-highlight', env);\n\n        if (!env.grammar) {\n          insertHighlightedCode(_.util.encode(env.code));\n          return;\n        }\n\n        if (async && _self.Worker) {\n          var worker = new Worker(_.filename);\n\n          worker.onmessage = function (evt) {\n            insertHighlightedCode(evt.data);\n          };\n\n          worker.postMessage(JSON.stringify({\n            language: env.language,\n            code: env.code,\n            immediateClose: true\n          }));\n        } else {\n          insertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n        }\n      },\n\n      /**\n       * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n       * and the language definitions to use, and returns a string with the HTML produced.\n       *\n       * The following hooks will be run:\n       * 1. `before-tokenize`\n       * 2. `after-tokenize`\n       * 3. `wrap`: On each {@link Token}.\n       *\n       * @param {string} text A string with the code to be highlighted.\n       * @param {Grammar} grammar An object containing the tokens to use.\n       *\n       * Usually a language definition like `Prism.languages.markup`.\n       * @param {string} language The name of the language definition passed to `grammar`.\n       * @returns {string} The highlighted HTML.\n       * @memberof Prism\n       * @public\n       * @example\n       * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n       */\n      highlight: function highlight(text, grammar, language) {\n        var env = {\n          code: text,\n          grammar: grammar,\n          language: language\n        };\n\n        _.hooks.run('before-tokenize', env);\n\n        env.tokens = _.tokenize(env.code, env.grammar);\n\n        _.hooks.run('after-tokenize', env);\n\n        return Token.stringify(_.util.encode(env.tokens), env.language);\n      },\n\n      /**\n       * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n       * and the language definitions to use, and returns an array with the tokenized code.\n       *\n       * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n       *\n       * This method could be useful in other contexts as well, as a very crude parser.\n       *\n       * @param {string} text A string with the code to be highlighted.\n       * @param {Grammar} grammar An object containing the tokens to use.\n       *\n       * Usually a language definition like `Prism.languages.markup`.\n       * @returns {TokenStream} An array of strings and tokens, a token stream.\n       * @memberof Prism\n       * @public\n       * @example\n       * let code = `var foo = 0;`;\n       * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n       * tokens.forEach(token => {\n       *     if (token instanceof Prism.Token && token.type === 'number') {\n       *         console.log(`Found numeric literal: ${token.content}`);\n       *     }\n       * });\n       */\n      tokenize: function tokenize(text, grammar) {\n        var rest = grammar.rest;\n\n        if (rest) {\n          for (var token in rest) {\n            grammar[token] = rest[token];\n          }\n\n          delete grammar.rest;\n        }\n\n        var tokenList = new LinkedList();\n        addAfter(tokenList, tokenList.head, text);\n        matchGrammar(text, tokenList, grammar, tokenList.head, 0);\n        return toArray(tokenList);\n      },\n\n      /**\n       * @namespace\n       * @memberof Prism\n       * @public\n       */\n      hooks: {\n        all: {},\n\n        /**\n         * Adds the given callback to the list of callbacks for the given hook.\n         *\n         * The callback will be invoked when the hook it is registered for is run.\n         * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n         *\n         * One callback function can be registered to multiple hooks and the same hook multiple times.\n         *\n         * @param {string} name The name of the hook.\n         * @param {HookCallback} callback The callback function which is given environment variables.\n         * @public\n         */\n        add: function add(name, callback) {\n          var hooks = _.hooks.all;\n          hooks[name] = hooks[name] || [];\n          hooks[name].push(callback);\n        },\n\n        /**\n         * Runs a hook invoking all registered callbacks with the given environment variables.\n         *\n         * Callbacks will be invoked synchronously and in the order in which they were registered.\n         *\n         * @param {string} name The name of the hook.\n         * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n         * @public\n         */\n        run: function run(name, env) {\n          var callbacks = _.hooks.all[name];\n\n          if (!callbacks || !callbacks.length) {\n            return;\n          }\n\n          for (var i = 0, callback; callback = callbacks[i++];) {\n            callback(env);\n          }\n        }\n      },\n      Token: Token\n    };\n    _self.Prism = _; // Typescript note:\n    // The following can be used to import the Token type in JSDoc:\n    //\n    //   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n    /**\n     * Creates a new token.\n     *\n     * @param {string} type See {@link Token#type type}\n     * @param {string | TokenStream} content See {@link Token#content content}\n     * @param {string|string[]} [alias] The alias(es) of the token.\n     * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n     * @class\n     * @global\n     * @public\n     */\n\n    function Token(type, content, alias, matchedStr) {\n      /**\n       * The type of the token.\n       *\n       * This is usually the key of a pattern in a {@link Grammar}.\n       *\n       * @type {string}\n       * @see GrammarToken\n       * @public\n       */\n      this.type = type;\n      /**\n       * The strings or tokens contained by this token.\n       *\n       * This will be a token stream if the pattern matched also defined an `inside` grammar.\n       *\n       * @type {string | TokenStream}\n       * @public\n       */\n\n      this.content = content;\n      /**\n       * The alias(es) of the token.\n       *\n       * @type {string|string[]}\n       * @see GrammarToken\n       * @public\n       */\n\n      this.alias = alias; // Copy of the full string this token was created from\n\n      this.length = (matchedStr || '').length | 0;\n    }\n    /**\n     * A token stream is an array of strings and {@link Token Token} objects.\n     *\n     * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n     * them.\n     *\n     * 1. No adjacent strings.\n     * 2. No empty strings.\n     *\n     *    The only exception here is the token stream that only contains the empty string and nothing else.\n     *\n     * @typedef {Array<string | Token>} TokenStream\n     * @global\n     * @public\n     */\n\n    /**\n     * Converts the given token or token stream to an HTML representation.\n     *\n     * The following hooks will be run:\n     * 1. `wrap`: On each {@link Token}.\n     *\n     * @param {string | Token | TokenStream} o The token or token stream to be converted.\n     * @param {string} language The name of current language.\n     * @returns {string} The HTML representation of the token or token stream.\n     * @memberof Token\n     * @static\n     */\n\n\n    Token.stringify = function stringify(o, language) {\n      if (typeof o == 'string') {\n        return o;\n      }\n\n      if (Array.isArray(o)) {\n        var s = '';\n        o.forEach(function (e) {\n          s += stringify(e, language);\n        });\n        return s;\n      }\n\n      var env = {\n        type: o.type,\n        content: stringify(o.content, language),\n        tag: 'span',\n        classes: ['token', o.type],\n        attributes: {},\n        language: language\n      };\n      var aliases = o.alias;\n\n      if (aliases) {\n        if (Array.isArray(aliases)) {\n          Array.prototype.push.apply(env.classes, aliases);\n        } else {\n          env.classes.push(aliases);\n        }\n      }\n\n      _.hooks.run('wrap', env);\n\n      var attributes = '';\n\n      for (var name in env.attributes) {\n        attributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n      }\n\n      return '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n    };\n    /**\n     * @param {RegExp} pattern\n     * @param {number} pos\n     * @param {string} text\n     * @param {boolean} lookbehind\n     * @returns {RegExpExecArray | null}\n     */\n\n\n    function matchPattern(pattern, pos, text, lookbehind) {\n      pattern.lastIndex = pos;\n      var match = pattern.exec(text);\n\n      if (match && lookbehind && match[1]) {\n        // change the match to remove the text matched by the Prism lookbehind group\n        var lookbehindLength = match[1].length;\n        match.index += lookbehindLength;\n        match[0] = match[0].slice(lookbehindLength);\n      }\n\n      return match;\n    }\n    /**\n     * @param {string} text\n     * @param {LinkedList<string | Token>} tokenList\n     * @param {any} grammar\n     * @param {LinkedListNode<string | Token>} startNode\n     * @param {number} startPos\n     * @param {RematchOptions} [rematch]\n     * @returns {void}\n     * @private\n     *\n     * @typedef RematchOptions\n     * @property {string} cause\n     * @property {number} reach\n     */\n\n\n    function matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n      for (var token in grammar) {\n        if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n          continue;\n        }\n\n        var patterns = grammar[token];\n        patterns = Array.isArray(patterns) ? patterns : [patterns];\n\n        for (var j = 0; j < patterns.length; ++j) {\n          if (rematch && rematch.cause == token + ',' + j) {\n            return;\n          }\n\n          var patternObj = patterns[j];\n          var inside = patternObj.inside;\n          var lookbehind = !!patternObj.lookbehind;\n          var greedy = !!patternObj.greedy;\n          var alias = patternObj.alias;\n\n          if (greedy && !patternObj.pattern.global) {\n            // Without the global flag, lastIndex won't work\n            var flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n            patternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n          }\n          /** @type {RegExp} */\n\n\n          var pattern = patternObj.pattern || patternObj;\n\n          for ( // iterate the token list and keep track of the current token/string position\n          var currentNode = startNode.next, pos = startPos; currentNode !== tokenList.tail; pos += currentNode.value.length, currentNode = currentNode.next) {\n            if (rematch && pos >= rematch.reach) {\n              break;\n            }\n\n            var str = currentNode.value;\n\n            if (tokenList.length > text.length) {\n              // Something went terribly wrong, ABORT, ABORT!\n              return;\n            }\n\n            if (str instanceof Token) {\n              continue;\n            }\n\n            var removeCount = 1; // this is the to parameter of removeBetween\n\n            var match;\n\n            if (greedy) {\n              match = matchPattern(pattern, pos, text, lookbehind);\n\n              if (!match) {\n                break;\n              }\n\n              var from = match.index;\n              var to = match.index + match[0].length;\n              var p = pos; // find the node that contains the match\n\n              p += currentNode.value.length;\n\n              while (from >= p) {\n                currentNode = currentNode.next;\n                p += currentNode.value.length;\n              } // adjust pos (and p)\n\n\n              p -= currentNode.value.length;\n              pos = p; // the current node is a Token, then the match starts inside another Token, which is invalid\n\n              if (currentNode.value instanceof Token) {\n                continue;\n              } // find the last node which is affected by this match\n\n\n              for (var k = currentNode; k !== tokenList.tail && (p < to || typeof k.value === 'string'); k = k.next) {\n                removeCount++;\n                p += k.value.length;\n              }\n\n              removeCount--; // replace with the new match\n\n              str = text.slice(pos, p);\n              match.index -= pos;\n            } else {\n              match = matchPattern(pattern, 0, str, lookbehind);\n\n              if (!match) {\n                continue;\n              }\n            } // eslint-disable-next-line no-redeclare\n\n\n            var from = match.index;\n            var matchStr = match[0];\n            var before = str.slice(0, from);\n            var after = str.slice(from + matchStr.length);\n            var reach = pos + str.length;\n\n            if (rematch && reach > rematch.reach) {\n              rematch.reach = reach;\n            }\n\n            var removeFrom = currentNode.prev;\n\n            if (before) {\n              removeFrom = addAfter(tokenList, removeFrom, before);\n              pos += before.length;\n            }\n\n            removeRange(tokenList, removeFrom, removeCount);\n            var wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n            currentNode = addAfter(tokenList, removeFrom, wrapped);\n\n            if (after) {\n              addAfter(tokenList, currentNode, after);\n            }\n\n            if (removeCount > 1) {\n              // at least one Token object was removed, so we have to do some rematching\n              // this can only happen if the current pattern is greedy\n\n              /** @type {RematchOptions} */\n              var nestedRematch = {\n                cause: token + ',' + j,\n                reach: reach\n              };\n              matchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch); // the reach might have been extended because of the rematching\n\n              if (rematch && nestedRematch.reach > rematch.reach) {\n                rematch.reach = nestedRematch.reach;\n              }\n            }\n          }\n        }\n      }\n    }\n    /**\n     * @typedef LinkedListNode\n     * @property {T} value\n     * @property {LinkedListNode<T> | null} prev The previous node.\n     * @property {LinkedListNode<T> | null} next The next node.\n     * @template T\n     * @private\n     */\n\n    /**\n     * @template T\n     * @private\n     */\n\n\n    function LinkedList() {\n      /** @type {LinkedListNode<T>} */\n      var head = {\n        value: null,\n        prev: null,\n        next: null\n      };\n      /** @type {LinkedListNode<T>} */\n\n      var tail = {\n        value: null,\n        prev: head,\n        next: null\n      };\n      head.next = tail;\n      /** @type {LinkedListNode<T>} */\n\n      this.head = head;\n      /** @type {LinkedListNode<T>} */\n\n      this.tail = tail;\n      this.length = 0;\n    }\n    /**\n     * Adds a new node with the given value to the list.\n     *\n     * @param {LinkedList<T>} list\n     * @param {LinkedListNode<T>} node\n     * @param {T} value\n     * @returns {LinkedListNode<T>} The added node.\n     * @template T\n     */\n\n\n    function addAfter(list, node, value) {\n      // assumes that node != list.tail && values.length >= 0\n      var next = node.next;\n      var newNode = {\n        value: value,\n        prev: node,\n        next: next\n      };\n      node.next = newNode;\n      next.prev = newNode;\n      list.length++;\n      return newNode;\n    }\n    /**\n     * Removes `count` nodes after the given node. The given node will not be removed.\n     *\n     * @param {LinkedList<T>} list\n     * @param {LinkedListNode<T>} node\n     * @param {number} count\n     * @template T\n     */\n\n\n    function removeRange(list, node, count) {\n      var next = node.next;\n\n      for (var i = 0; i < count && next !== list.tail; i++) {\n        next = next.next;\n      }\n\n      node.next = next;\n      next.prev = node;\n      list.length -= i;\n    }\n    /**\n     * @param {LinkedList<T>} list\n     * @returns {T[]}\n     * @template T\n     */\n\n\n    function toArray(list) {\n      var array = [];\n      var node = list.head.next;\n\n      while (node !== list.tail) {\n        array.push(node.value);\n        node = node.next;\n      }\n\n      return array;\n    }\n\n    if (!_self.document) {\n      if (!_self.addEventListener) {\n        // in Node.js\n        return _;\n      }\n\n      if (!_.disableWorkerMessageHandler) {\n        // In worker\n        _self.addEventListener('message', function (evt) {\n          var message = JSON.parse(evt.data);\n          var lang = message.language;\n          var code = message.code;\n          var immediateClose = message.immediateClose;\n\n          _self.postMessage(_.highlight(code, _.languages[lang], lang));\n\n          if (immediateClose) {\n            _self.close();\n          }\n        }, false);\n      }\n\n      return _;\n    } // Get current script and highlight\n\n\n    var script = _.util.currentScript();\n\n    if (script) {\n      _.filename = script.src;\n\n      if (script.hasAttribute('data-manual')) {\n        _.manual = true;\n      }\n    }\n\n    function highlightAutomaticallyCallback() {\n      if (!_.manual) {\n        _.highlightAll();\n      }\n    }\n\n    if (!_.manual) {\n      // If the document state is \"loading\", then we'll use DOMContentLoaded.\n      // If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n      // DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n      // might take longer one animation frame to execute which can create a race condition where only some plugins have\n      // been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n      // See https://github.com/PrismJS/prism/issues/2102\n      var readyState = document.readyState;\n\n      if (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n        document.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n      } else {\n        if (window.requestAnimationFrame) {\n          window.requestAnimationFrame(highlightAutomaticallyCallback);\n        } else {\n          window.setTimeout(highlightAutomaticallyCallback, 16);\n        }\n      }\n    }\n\n    return _;\n  }(_self);\n\n  if (module.exports) {\n    module.exports = Prism;\n  } // hack for components to work correctly in node.js\n\n\n  if (typeof commonjsGlobal !== 'undefined') {\n    commonjsGlobal.Prism = Prism;\n  } // some additional documentation/types\n\n  /**\n   * The expansion of a simple `RegExp` literal to support additional properties.\n   *\n   * @typedef GrammarToken\n   * @property {RegExp} pattern The regular expression of the token.\n   * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n   * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n   * @property {boolean} [greedy=false] Whether the token is greedy.\n   * @property {string|string[]} [alias] An optional alias or list of aliases.\n   * @property {Grammar} [inside] The nested grammar of this token.\n   *\n   * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n   *\n   * This can be used to make nested and even recursive language definitions.\n   *\n   * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n   * each another.\n   * @global\n   * @public\n   */\n\n  /**\n   * @typedef Grammar\n   * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n   * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n   * @global\n   * @public\n   */\n\n  /**\n   * A function which will invoked after an element was successfully highlighted.\n   *\n   * @callback HighlightCallback\n   * @param {Element} element The element successfully highlighted.\n   * @returns {void}\n   * @global\n   * @public\n   */\n\n  /**\n   * @callback HookCallback\n   * @param {Object<string, any>} env The environment variables of the hook.\n   * @returns {void}\n   * @global\n   * @public\n   */\n\n})(prismCore);\n\nvar clike_1 = clike$1;\nclike$1.displayName = 'clike';\nclike$1.aliases = [];\n\nfunction clike$1(Prism) {\n  Prism.languages.clike = {\n    comment: [{\n      pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      lookbehind: true,\n      greedy: true\n    }, {\n      pattern: /(^|[^\\\\:])\\/\\/.*/,\n      lookbehind: true,\n      greedy: true\n    }],\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n      lookbehind: true,\n      inside: {\n        punctuation: /[.\\\\]/\n      }\n    },\n    keyword: /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n    boolean: /\\b(?:true|false)\\b/,\n    function: /\\b\\w+(?=\\()/,\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n    operator: /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n    punctuation: /[{}[\\];(),.:]/\n  };\n}\n\nvar javascript_1 = javascript;\njavascript.displayName = 'javascript';\njavascript.aliases = ['js'];\n\nfunction javascript(Prism) {\n  Prism.languages.javascript = Prism.languages.extend('clike', {\n    'class-name': [Prism.languages.clike['class-name'], {\n      pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:prototype|constructor))/,\n      lookbehind: true\n    }],\n    keyword: [{\n      pattern: /((?:^|\\})\\s*)catch\\b/,\n      lookbehind: true\n    }, {\n      pattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n      lookbehind: true\n    }],\n    // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n    function: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n    number: /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n    operator: /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n  });\n  Prism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\n  Prism.languages.insertBefore('javascript', 'keyword', {\n    regex: {\n      // eslint-disable-next-line regexp/no-dupe-characters-character-class\n      pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'regex-source': {\n          pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n          lookbehind: true,\n          alias: 'language-regex',\n          inside: Prism.languages.regex\n        },\n        'regex-delimiter': /^\\/|\\/$/,\n        'regex-flags': /^[a-z]+$/\n      }\n    },\n    // This must be declared before keyword because we use \"function\" inside the look-forward\n    'function-variable': {\n      pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n      alias: 'function'\n    },\n    parameter: [{\n      pattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    }, {\n      pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    }, {\n      pattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    }, {\n      pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    }],\n    constant: /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n  });\n  Prism.languages.insertBefore('javascript', 'string', {\n    hashbang: {\n      pattern: /^#!.*/,\n      greedy: true,\n      alias: 'comment'\n    },\n    'template-string': {\n      pattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n      greedy: true,\n      inside: {\n        'template-punctuation': {\n          pattern: /^`|`$/,\n          alias: 'string'\n        },\n        interpolation: {\n          pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n          lookbehind: true,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{|\\}$/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.javascript\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  });\n\n  if (Prism.languages.markup) {\n    Prism.languages.markup.tag.addInlined('script', 'javascript'); // add attribute support for all DOM events.\n    // https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\n    Prism.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source, 'javascript');\n  }\n\n  Prism.languages.js = Prism.languages.javascript;\n}\n/* global window, self */\n// istanbul ignore next - Don't allow Prism to run on page load in browser or\n// to start messaging from workers.\n\n\nvar ctx = (typeof globalThis === \"undefined\" ? \"undefined\" : _typeof(globalThis)) === 'object' ? globalThis : (typeof self === \"undefined\" ? \"undefined\" : _typeof(self)) === 'object' ? self : (typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === 'object' ? window : _typeof(commonjsGlobal) === 'object' ? commonjsGlobal : {};\nvar restore = capture();\nctx.Prism = {\n  manual: true,\n  disableWorkerMessageHandler: true\n}; // Load all stuff in `prism.js` itself, except for `prism-file-highlight.js`.\n// The wrapped non-leaky grammars are loaded instead of Prism’s originals.\n\nvar h = hastscript;\nvar decode = parseEntities_1;\nvar Prism = prismCore.exports;\nvar markup = markup_1;\nvar css = css_1;\nvar clike = clike_1;\nvar js = javascript_1;\nrestore();\nvar own = {}.hasOwnProperty; // Inherit.\n\nfunction Refractor() {}\n\nRefractor.prototype = Prism; // Construct.\n\nvar refract = new Refractor(); // Expose.\n\nvar core = refract; // Create.\n\nrefract.highlight = highlight;\nrefract.register = register;\nrefract.alias = alias;\nrefract.registered = registered;\nrefract.listLanguages = listLanguages; // Register bundled grammars.\n\nregister(markup);\nregister(css);\nregister(clike);\nregister(js);\nrefract.util.encode = encode;\nrefract.Token.stringify = stringify;\n\nfunction register(grammar) {\n  if (typeof grammar !== 'function' || !grammar.displayName) {\n    throw new Error('Expected `function` for `grammar`, got `' + grammar + '`');\n  } // Do not duplicate registrations.\n\n\n  if (refract.languages[grammar.displayName] === undefined) {\n    grammar(refract);\n  }\n}\n\nfunction alias(name, alias) {\n  var languages = refract.languages;\n  var map = name;\n  var key;\n  var list;\n  var length;\n  var index;\n\n  if (alias) {\n    map = {};\n    map[name] = alias;\n  }\n\n  for (key in map) {\n    list = map[key];\n    list = typeof list === 'string' ? [list] : list;\n    length = list.length;\n    index = -1;\n\n    while (++index < length) {\n      languages[list[index]] = languages[key];\n    }\n  }\n}\n\nfunction highlight(value, name) {\n  var sup = Prism.highlight;\n  var grammar;\n\n  if (typeof value !== 'string') {\n    throw new Error('Expected `string` for `value`, got `' + value + '`');\n  } // `name` is a grammar object.\n\n\n  if (refract.util.type(name) === 'Object') {\n    grammar = name;\n    name = null;\n  } else {\n    if (typeof name !== 'string') {\n      throw new Error('Expected `string` for `name`, got `' + name + '`');\n    }\n\n    if (own.call(refract.languages, name)) {\n      grammar = refract.languages[name];\n    } else {\n      throw new Error('Unknown language: `' + name + '` is not registered');\n    }\n  }\n\n  return sup.call(this, value, grammar, name);\n}\n\nfunction registered(language) {\n  if (typeof language !== 'string') {\n    throw new Error('Expected `string` for `language`, got `' + language + '`');\n  }\n\n  return own.call(refract.languages, language);\n}\n\nfunction listLanguages() {\n  var languages = refract.languages;\n  var list = [];\n  var language;\n\n  for (language in languages) {\n    if (own.call(languages, language) && _typeof(languages[language]) === 'object') {\n      list.push(language);\n    }\n  }\n\n  return list;\n}\n\nfunction stringify(value, language, parent) {\n  var env;\n\n  if (typeof value === 'string') {\n    return {\n      type: 'text',\n      value: value\n    };\n  }\n\n  if (refract.util.type(value) === 'Array') {\n    return stringifyAll(value, language);\n  }\n\n  env = {\n    type: value.type,\n    content: refract.Token.stringify(value.content, language, parent),\n    tag: 'span',\n    classes: ['token', value.type],\n    attributes: {},\n    language: language,\n    parent: parent\n  };\n\n  if (value.alias) {\n    env.classes = env.classes.concat(value.alias);\n  }\n\n  refract.hooks.run('wrap', env);\n  return h(env.tag + '.' + env.classes.join('.'), attributes(env.attributes), env.content);\n}\n\nfunction stringifyAll(values, language) {\n  var result = [];\n  var length = values.length;\n  var index = -1;\n  var value;\n\n  while (++index < length) {\n    value = values[index];\n\n    if (value !== '' && value !== null && value !== undefined) {\n      result.push(value);\n    }\n  }\n\n  index = -1;\n  length = result.length;\n\n  while (++index < length) {\n    value = result[index];\n    result[index] = refract.Token.stringify(value, language, result);\n  }\n\n  return result;\n}\n\nfunction encode(tokens) {\n  return tokens;\n}\n\nfunction attributes(attrs) {\n  var key;\n\n  for (key in attrs) {\n    attrs[key] = decode(attrs[key]);\n  }\n\n  return attrs;\n}\n\nfunction capture() {\n  var defined = ('Prism' in ctx);\n  /* istanbul ignore next */\n\n  var current = defined ? ctx.Prism : undefined;\n  return restore;\n\n  function restore() {\n    /* istanbul ignore else - Clean leaks after Prism. */\n    if (defined) {\n      ctx.Prism = current;\n    } else {\n      delete ctx.Prism;\n    }\n\n    defined = undefined;\n    current = undefined;\n  }\n}\n\nvar SyntaxHighlighter$1 = highlight$1(core, {});\n\nSyntaxHighlighter$1.registerLanguage = function (_, language) {\n  return core.register(language);\n};\n\nvar ReactSyntaxHighlighter = SyntaxHighlighter$1;\nvar formatter = memoize(2)(function (code) {\n  return dedent(code);\n});\nvar navigator = window_1.navigator,\n    document$1 = window_1.document,\n    globalWindow = window_1.window;\nReactSyntaxHighlighter.registerLanguage('jsextra', jsExtras$1);\nReactSyntaxHighlighter.registerLanguage('jsx', jsx$1);\nReactSyntaxHighlighter.registerLanguage('json', json$1);\nReactSyntaxHighlighter.registerLanguage('yml', yaml$1);\nReactSyntaxHighlighter.registerLanguage('md', markdown$1);\nReactSyntaxHighlighter.registerLanguage('bash', bash$1);\nReactSyntaxHighlighter.registerLanguage('css', css$2);\nReactSyntaxHighlighter.registerLanguage('html', markup$2);\nReactSyntaxHighlighter.registerLanguage('tsx', tsx$1);\nReactSyntaxHighlighter.registerLanguage('typescript', typescript$1);\nReactSyntaxHighlighter.registerLanguage('graphql', graphql$1);\nvar themedSyntax = memoize(2)(function (theme) {\n  return Object.entries(theme.code || {}).reduce(function (acc, _ref8) {\n    var _ref9 = _slicedToArray(_ref8, 2),\n        key = _ref9[0],\n        val = _ref9[1];\n\n    return Object.assign(Object.assign({}, acc), _defineProperty2({}, \"* .\".concat(key), val));\n  }, {});\n});\nvar copyToClipboard = createCopyToClipboardFunction();\n\nfunction createCopyToClipboardFunction() {\n  var _this = this;\n\n  if (navigator === null || navigator === void 0 ? void 0 : navigator.clipboard) {\n    return function (text) {\n      return navigator.clipboard.writeText(text);\n    };\n  }\n\n  return function (text) {\n    return __awaiter(_this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var tmp, focus;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              tmp = document$1.createElement('TEXTAREA');\n              focus = document$1.activeElement;\n              tmp.value = text;\n              document$1.body.appendChild(tmp);\n              tmp.select();\n              document$1.execCommand('copy');\n              document$1.body.removeChild(tmp);\n              focus.focus();\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n  };\n}\n\nvar Wrapper = styled.div(function (_ref10) {\n  var theme = _ref10.theme;\n  return {\n    position: 'relative',\n    overflow: 'hidden',\n    color: theme.color.defaultText\n  };\n}, function (_ref11) {\n  var theme = _ref11.theme,\n      bordered = _ref11.bordered;\n  return bordered ? {\n    border: \"1px solid \".concat(theme.appBorderColor),\n    borderRadius: theme.borderRadius,\n    background: theme.background.content\n  } : {};\n});\nvar Scroller = styled(function (_ref12) {\n  var children = _ref12.children,\n      className = _ref12.className;\n  return React__default.createElement(ScrollArea, {\n    horizontal: true,\n    vertical: true,\n    className: className\n  }, children);\n})({\n  position: 'relative'\n}, function (_ref13) {\n  var theme = _ref13.theme;\n  return {\n    '& code': {\n      paddingRight: theme.layoutMargin\n    }\n  };\n}, function (_ref14) {\n  var theme = _ref14.theme;\n  return themedSyntax(theme);\n});\nvar Pre = styled.pre(function (_ref15) {\n  var theme = _ref15.theme,\n      padded = _ref15.padded;\n  return {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    margin: 0,\n    padding: padded ? theme.layoutMargin : 0\n  };\n});\nvar Code = styled.code({\n  flex: 1,\n  paddingRight: 0,\n  opacity: 1\n});\n\nvar SyntaxHighlighter = function SyntaxHighlighter(_a) {\n  var children = _a.children,\n      _a$language = _a.language,\n      language = _a$language === void 0 ? 'jsx' : _a$language,\n      _a$copyable = _a.copyable,\n      copyable = _a$copyable === void 0 ? false : _a$copyable,\n      _a$bordered = _a.bordered,\n      bordered = _a$bordered === void 0 ? false : _a$bordered,\n      _a$padded = _a.padded,\n      padded = _a$padded === void 0 ? false : _a$padded,\n      _a$format = _a.format,\n      format = _a$format === void 0 ? true : _a$format,\n      _a$className = _a.className,\n      className = _a$className === void 0 ? null : _a$className,\n      _a$showLineNumbers = _a.showLineNumbers,\n      showLineNumbers = _a$showLineNumbers === void 0 ? false : _a$showLineNumbers,\n      rest = __rest(_a, [\"children\", \"language\", \"copyable\", \"bordered\", \"padded\", \"format\", \"className\", \"showLineNumbers\"]);\n\n  if (typeof children !== 'string' || !children.trim()) {\n    return null;\n  }\n\n  var highlightableCode = format ? formatter(children) : children.trim();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      copied = _useState2[0],\n      setCopied = _useState2[1];\n\n  var onClick = function onClick(e) {\n    e.preventDefault();\n    var selectedText = globalWindow.getSelection().toString();\n    var textToCopy = e.type !== 'click' && selectedText ? selectedText : highlightableCode;\n    copyToClipboard(textToCopy).then(function () {\n      setCopied(true);\n      globalWindow.setTimeout(function () {\n        return setCopied(false);\n      }, 1500);\n    }).catch(logger.error);\n  };\n\n  return React__default.createElement(Wrapper, {\n    bordered: bordered,\n    padded: padded,\n    className: className,\n    onCopyCapture: onClick\n  }, React__default.createElement(Scroller, null, React__default.createElement(ReactSyntaxHighlighter, Object.assign({\n    padded: padded || bordered,\n    language: language,\n    showLineNumbers: showLineNumbers,\n    showInlineLineNumbers: showLineNumbers,\n    useInlineStyles: false,\n    PreTag: Pre,\n    CodeTag: Code,\n    lineNumberContainerStyle: {}\n  }, rest), highlightableCode)), copyable ? React__default.createElement(ActionBar, {\n    actionItems: [{\n      title: copied ? 'Copied' : 'Copy',\n      onClick: onClick\n    }]\n  }) : null);\n};\n\nexport { SyntaxHighlighter, createCopyToClipboardFunction, SyntaxHighlighter as default };\n"],"names":["memoize","useState"],"mappings":"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"}